{"remainingRequest":"C:\\Users\\PC\\Desktop\\Otros\\DP1\\Front\\dp1_front-Redex\\Redex\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\PC\\Desktop\\Otros\\DP1\\Front\\dp1_front-Redex\\Redex\\node_modules\\vue-mapbox\\src\\components\\map\\GlMap.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"C:\\Users\\PC\\Desktop\\Otros\\DP1\\Front\\dp1_front-Redex\\Redex\\node_modules\\vue-mapbox\\src\\components\\map\\GlMap.vue","mtime":1715192477969},{"path":"C:\\Users\\PC\\Desktop\\Otros\\DP1\\Front\\dp1_front-Redex\\Redex\\node_modules\\css-loader\\index.js","mtime":1715192470608},{"path":"C:\\Users\\PC\\Desktop\\Otros\\DP1\\Front\\dp1_front-Redex\\Redex\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1715192477909},{"path":"C:\\Users\\PC\\Desktop\\Otros\\DP1\\Front\\dp1_front-Redex\\Redex\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1715192468895},{"path":"C:\\Users\\PC\\Desktop\\Otros\\DP1\\Front\\dp1_front-Redex\\Redex\\node_modules\\vue-loader\\lib\\index.js","mtime":1715192477908}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\n.mgl-map-wrapper {\r\n  height: 100%;\r\n  position: relative;\r\n  width: 100%;\r\n}\r\n\r\n.mgl-map-wrapper .mapboxgl-map {\r\n  height: 100%;\r\n  left: 0;\r\n  position: absolute;\r\n  top: 0;\r\n  width: 100%;\r\n}\r\n",{"version":3,"sources":["GlMap.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqHA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"GlMap.vue","sourceRoot":"node_modules/vue-mapbox/src/components/map","sourcesContent":["<template>\r\n  <div class=\"mgl-map-wrapper\">\r\n    <div v-once :id=\"container\" ref=\"container\" />\r\n    <slot v-if=\"initialized\" />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport withEvents from \"../../lib/withEvents\";\r\nimport mapEvents from \"./events\";\r\nimport options from \"./options\";\r\nimport withWatchers from \"./mixins/withWatchers\";\r\nimport withPrivateMethods from \"./mixins/withPrivateMethods\";\r\nimport withAsyncActions from \"./mixins/withAsyncActions\";\r\n\r\nexport default {\r\n  name: \"GlMap\",\r\n\r\n  mixins: [withWatchers, withAsyncActions, withPrivateMethods, withEvents],\r\n\r\n  props: {\r\n    mapboxGl: {\r\n      type: Object,\r\n      default: null\r\n    },\r\n    ...options\r\n  },\r\n\r\n  provide() {\r\n    const self = this;\r\n    return {\r\n      get mapbox() {\r\n        return self.mapbox;\r\n      },\r\n      get map() {\r\n        return self.map;\r\n      },\r\n      get actions() {\r\n        return self.actions;\r\n      }\r\n    };\r\n  },\r\n\r\n  data() {\r\n    return {\r\n      initial: true,\r\n      initialized: false\r\n    };\r\n  },\r\n\r\n  computed: {\r\n    loaded() {\r\n      return this.map ? this.map.loaded() : false;\r\n    },\r\n    version() {\r\n      return this.map ? this.map.version : null;\r\n    },\r\n    // TODO: make 'bounds' synced prop\r\n    bounds() {\r\n      return this.map ? this.map.getBounds() : null;\r\n    },\r\n    isStyleLoaded() {\r\n      return this.map ? this.map.isStyleLoaded() : false;\r\n    },\r\n    areTilesLoaded() {\r\n      return this.map ? this.map.areTilesLoaded() : false;\r\n    },\r\n    isMoving() {\r\n      return this.map ? this.map.isMoving() : false;\r\n    },\r\n    canvas() {\r\n      return this.map ? this.map.getCanvas() : null;\r\n    },\r\n    canvasContainer() {\r\n      return this.map ? this.map.getCanvasContainer() : null;\r\n    },\r\n    images() {\r\n      return this.map ? this.map.listImages() : null;\r\n    }\r\n  },\r\n\r\n  created() {\r\n    this.map = null;\r\n    this.propsIsUpdating = {};\r\n    this.mapboxPromise = this.mapboxGl\r\n      ? Promise.resolve(this.mapboxGl)\r\n      : import(\"mapbox-gl\");\r\n  },\r\n\r\n  mounted() {\r\n    this.$_loadMap().then(map => {\r\n      this.map = map;\r\n      if (this.RTLTextPluginUrl !== undefined) {\r\n        this.mapbox.setRTLTextPlugin(\r\n          this.RTLTextPluginUrl,\r\n          this.$_RTLTextPluginError\r\n        );\r\n      }\r\n      const eventNames = Object.keys(mapEvents);\r\n      this.$_bindMapEvents(eventNames);\r\n      this.$_registerAsyncActions(map);\r\n      this.$_bindPropsUpdateEvents();\r\n      this.initial = false;\r\n      this.initialized = true;\r\n      this.$emit(\"load\", { map, component: this });\r\n    });\r\n  },\r\n\r\n  beforeDestroy() {\r\n    this.$nextTick(() => {\r\n      if (this.map) this.map.remove();\r\n    });\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n.mgl-map-wrapper {\r\n  height: 100%;\r\n  position: relative;\r\n  width: 100%;\r\n}\r\n\r\n.mgl-map-wrapper .mapboxgl-map {\r\n  height: 100%;\r\n  left: 0;\r\n  position: absolute;\r\n  top: 0;\r\n  width: 100%;\r\n}\r\n</style>\r\n"]}]}