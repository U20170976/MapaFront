{"remainingRequest":"C:\\Users\\PC\\Desktop\\Otros\\DP1\\Front\\dp1_front-Redex\\Redex\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\PC\\Desktop\\Otros\\DP1\\Front\\dp1_front-Redex\\Redex\\src\\components\\BaseDropdown.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\PC\\Desktop\\Otros\\DP1\\Front\\dp1_front-Redex\\Redex\\src\\components\\BaseDropdown.vue","mtime":1715192479063},{"path":"C:\\Users\\PC\\Desktop\\Otros\\DP1\\Front\\dp1_front-Redex\\Redex\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1715192468895},{"path":"C:\\Users\\PC\\Desktop\\Otros\\DP1\\Front\\dp1_front-Redex\\Redex\\node_modules\\babel-loader\\lib\\index.js","mtime":1715192467870},{"path":"C:\\Users\\PC\\Desktop\\Otros\\DP1\\Front\\dp1_front-Redex\\Redex\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1715192468895},{"path":"C:\\Users\\PC\\Desktop\\Otros\\DP1\\Front\\dp1_front-Redex\\Redex\\node_modules\\vue-loader\\lib\\index.js","mtime":1715192477908}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  name: \"base-dropdown\",\n  props: {\n    tag: {\n      type: String,\n      default: \"div\",\n      description: \"Dropdown html tag (e.g div, ul etc)\"\n    },\n    titleTag: {\n      type: String,\n      default: \"button\",\n      description: \"Dropdown title (toggle) html tag\"\n    },\n    title: {\n      type: String,\n      description: \"Dropdown title\",\n\n    },\n    icon: {\n      type: String,\n      description: \"Dropdown icon\"\n    },\n    titleClasses: {\n      type: [String, Object, Array],\n      description: \"Title css classes\"\n    },\n    menuClasses: {\n      type: [String, Object],\n      description: \"Menu css classes\"\n    },\n    menuOnRight: {\n      type: Boolean,\n      description: \"Whether menu should appear on the right\"\n    },\n    ariaLabel: String\n  },\n  data() {\n    return {\n      isOpen: false\n    };\n  },\n  methods: {\n    toggleDropDown() {\n      this.isOpen = !this.isOpen;\n      this.$emit(\"change\", this.isOpen);\n    },\n    closeDropDown() {\n      this.isOpen = false;\n      this.$emit('change', false);\n    }\n  }\n};\n",{"version":3,"sources":["BaseDropdown.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"BaseDropdown.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <component :is=\"tag\"\r\n             class=\"dropdown\"\r\n             :class=\"{show:isOpen}\"\r\n             @click=\"toggleDropDown\"\r\n             v-click-outside=\"closeDropDown\">\r\n    <slot name=\"title-container\" :is-open=\"isOpen\">\r\n      <component\r\n        :is=\"titleTag\"\r\n        class=\"dropdown-toggle btn-rotate\"\r\n        :class=\"titleClasses\"\r\n        :aria-expanded=\"isOpen\"\r\n        :aria-label=\"title || ariaLabel\"\r\n        data-toggle=\"dropdown\">\r\n        <slot name=\"title\" :is-open=\"isOpen\">\r\n          <i :class=\"icon\"></i>\r\n          {{title}}\r\n        </slot>\r\n      </component>\r\n    </slot>\r\n    <ul class=\"dropdown-menu\" :class=\"[{show:isOpen}, {'dropdown-menu-right': menuOnRight}, menuClasses]\">\r\n      <slot></slot>\r\n    </ul>\r\n  </component>\r\n</template>\r\n<script>\r\n  export default {\r\n    name: \"base-dropdown\",\r\n    props: {\r\n      tag: {\r\n        type: String,\r\n        default: \"div\",\r\n        description: \"Dropdown html tag (e.g div, ul etc)\"\r\n      },\r\n      titleTag: {\r\n        type: String,\r\n        default: \"button\",\r\n        description: \"Dropdown title (toggle) html tag\"\r\n      },\r\n      title: {\r\n        type: String,\r\n        description: \"Dropdown title\",\r\n\r\n      },\r\n      icon: {\r\n        type: String,\r\n        description: \"Dropdown icon\"\r\n      },\r\n      titleClasses: {\r\n        type: [String, Object, Array],\r\n        description: \"Title css classes\"\r\n      },\r\n      menuClasses: {\r\n        type: [String, Object],\r\n        description: \"Menu css classes\"\r\n      },\r\n      menuOnRight: {\r\n        type: Boolean,\r\n        description: \"Whether menu should appear on the right\"\r\n      },\r\n      ariaLabel: String\r\n    },\r\n    data() {\r\n      return {\r\n        isOpen: false\r\n      };\r\n    },\r\n    methods: {\r\n      toggleDropDown() {\r\n        this.isOpen = !this.isOpen;\r\n        this.$emit(\"change\", this.isOpen);\r\n      },\r\n      closeDropDown() {\r\n        this.isOpen = false;\r\n        this.$emit('change', false);\r\n      }\r\n    }\r\n  };\r\n</script>\r\n"]}]}