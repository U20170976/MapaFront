{"remainingRequest":"C:\\Users\\PC\\Desktop\\Otros\\DP1\\Front\\dp1_front-Redex\\Redex\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\PC\\Desktop\\Otros\\DP1\\Front\\dp1_front-Redex\\Redex\\src\\pages\\Dashboard.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\PC\\Desktop\\Otros\\DP1\\Front\\dp1_front-Redex\\Redex\\src\\pages\\Dashboard.vue","mtime":1715192479096},{"path":"C:\\Users\\PC\\Desktop\\Otros\\DP1\\Front\\dp1_front-Redex\\Redex\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1715192468895},{"path":"C:\\Users\\PC\\Desktop\\Otros\\DP1\\Front\\dp1_front-Redex\\Redex\\node_modules\\babel-loader\\lib\\index.js","mtime":1715192467870},{"path":"C:\\Users\\PC\\Desktop\\Otros\\DP1\\Front\\dp1_front-Redex\\Redex\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1715192468895},{"path":"C:\\Users\\PC\\Desktop\\Otros\\DP1\\Front\\dp1_front-Redex\\Redex\\node_modules\\vue-loader\\lib\\index.js","mtime":1715192477908}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport LineChart from '@/components/Charts/LineChart';\nimport BarChart from '@/components/Charts/BarChart';\nimport * as chartConfigs from '@/components/Charts/config';\nimport TaskList from './Dashboard/TaskList';\nimport UserTable from './Dashboard/UserTable';\nimport config from '@/config';\n\nexport default {\n  components: {\n    LineChart,\n    BarChart,\n    TaskList,\n    UserTable\n  },\n  data() {\n    return {\n      bigLineChart: {\n        allData: [\n          [100, 70, 90, 70, 85, 60, 75, 60, 90, 80, 110, 100],\n          [80, 120, 105, 110, 95, 105, 90, 100, 80, 95, 70, 120],\n          [60, 80, 65, 130, 80, 105, 90, 130, 70, 115, 60, 130]\n        ],\n        activeIndex: 0,\n        chartData: null,\n        extraOptions: chartConfigs.purpleChartOptions,\n        gradientColors: config.colors.primaryGradient,\n        gradientStops: [1, 0.4, 0],\n        categories: []\n      },\n      purpleLineChart: {\n        extraOptions: chartConfigs.purpleChartOptions,\n        chartData: {\n          labels: ['JUL', 'AUG', 'SEP', 'OCT', 'NOV', 'DEC'],\n          datasets: [{\n            label: \"Data\",\n            fill: true,\n            borderColor: config.colors.primary,\n            borderWidth: 2,\n            borderDash: [],\n            borderDashOffset: 0.0,\n            pointBackgroundColor: config.colors.primary,\n            pointBorderColor: 'rgba(255,255,255,0)',\n            pointHoverBackgroundColor: config.colors.primary,\n            pointBorderWidth: 20,\n            pointHoverRadius: 4,\n            pointHoverBorderWidth: 15,\n            pointRadius: 4,\n            data: [80, 100, 70, 80, 120, 80],\n          }]\n        },\n        gradientColors: config.colors.primaryGradient,\n        gradientStops: [1, 0.2, 0],\n      },\n      greenLineChart: {\n        extraOptions: chartConfigs.greenChartOptions,\n        chartData: {\n          labels: ['JUL', 'AUG', 'SEP', 'OCT', 'NOV'],\n          datasets: [{\n            label: \"My First dataset\",\n            fill: true,\n            borderColor: config.colors.danger,\n            borderWidth: 2,\n            borderDash: [],\n            borderDashOffset: 0.0,\n            pointBackgroundColor: config.colors.danger,\n            pointBorderColor: 'rgba(255,255,255,0)',\n            pointHoverBackgroundColor: config.colors.danger,\n            pointBorderWidth: 20,\n            pointHoverRadius: 4,\n            pointHoverBorderWidth: 15,\n            pointRadius: 4,\n            data: [90, 27, 60, 12, 80],\n          }]\n        },\n        gradientColors: ['rgba(66,134,121,0.15)', 'rgba(66,134,121,0.0)', 'rgba(66,134,121,0)'],\n        gradientStops: [1, 0.4, 0],\n      },\n      blueBarChart: {\n        extraOptions: chartConfigs.barChartOptions,\n        chartData: {\n          labels: ['USA', 'GER', 'AUS', 'UK', 'RO', 'BR'],\n          datasets: [{\n            label: \"Countries\",\n            fill: true,\n            borderColor: config.colors.info,\n            borderWidth: 2,\n            borderDash: [],\n            borderDashOffset: 0.0,\n            data: [53, 20, 10, 80, 100, 45],\n          }]\n        },\n        gradientColors: config.colors.primaryGradient,\n        gradientStops: [1, 0.4, 0],\n      }\n    }\n  },\n  computed: {\n    enableRTL() {\n      return this.$route.query.enableRTL;\n    },\n    isRTL() {\n      return this.$rtl.isRTL;\n    },\n    bigLineChartCategories() {\n      return this.$t('dashboard.chartCategories');\n    }\n  },\n  methods: {\n    initBigChart(index) {\n      let chartData = {\n        datasets: [{\n          fill: true,\n          borderColor: config.colors.primary,\n          borderWidth: 2,\n          borderDash: [],\n          borderDashOffset: 0.0,\n          pointBackgroundColor: config.colors.primary,\n          pointBorderColor: 'rgba(255,255,255,0)',\n          pointHoverBackgroundColor: config.colors.primary,\n          pointBorderWidth: 20,\n          pointHoverRadius: 4,\n          pointHoverBorderWidth: 15,\n          pointRadius: 4,\n          data: this.bigLineChart.allData[index]\n        }],\n        labels: ['JAN', 'FEB', 'MAR', 'APR', 'MAY', 'JUN', 'JUL', 'AUG', 'SEP', 'OCT', 'NOV', 'DEC'],\n      }\n      this.$refs.bigChart.updateGradients(chartData);\n      this.bigLineChart.chartData = chartData;\n      this.bigLineChart.activeIndex = index;\n    }\n  },\n  mounted() {\n    this.i18n = this.$i18n;\n    if (this.enableRTL) {\n      this.i18n.locale = 'ar';\n      this.$rtl.enableRTL();\n    }\n    this.initBigChart(0);\n  },\n  beforeDestroy() {\n    if (this.$rtl.isRTL) {\n      this.i18n.locale = 'en';\n      this.$rtl.disableRTL();\n    }\n  }\n};\n",{"version":3,"sources":["Dashboard.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAifile":"Dashboard.vue","sourceRoot":"src/pages","sourcesContent":["<template>\r\n  <div>\r\n\r\n    <div class=\"row\">\r\n      <div class=\"col-12\">\r\n        <card type=\"chart\">\r\n          <template slot=\"header\">\r\n            <div class=\"row\">\r\n              <div class=\"col-sm-6\" :class=\"isRTL ? 'text-right' : 'text-left'\">\r\n                <h5 class=\"card-category\">{{$t('dashboard.totalShipments')}}</h5>\r\n                <h2 class=\"card-title\">{{$t('dashboard.performance')}}</h2>\r\n              </div>\r\n              <div class=\"col-sm-6\">\r\n                <div class=\"btn-group btn-group-toggle\"\r\n                     :class=\"isRTL ? 'float-left' : 'float-right'\"\r\n                     data-toggle=\"buttons\">\r\n                  <label v-for=\"(option, index) in bigLineChartCategories\"\r\n                         :key=\"option\"\r\n                         class=\"btn btn-sm btn-primary btn-simple\"\r\n                         :class=\"{active: bigLineChart.activeIndex === index}\"\r\n                         :id=\"index\">\r\n                    <input type=\"radio\"\r\n                           @click=\"initBigChart(index)\"\r\n                           name=\"options\" autocomplete=\"off\"\r\n                           :checked=\"bigLineChart.activeIndex === index\">\r\n                    {{option}}\r\n                  </label>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </template>\r\n          <div class=\"chart-area\">\r\n            <line-chart style=\"height: 100%\"\r\n                        ref=\"bigChart\"\r\n                        chart-id=\"big-line-chart\"\r\n                        :chart-data=\"bigLineChart.chartData\"\r\n                        :gradient-colors=\"bigLineChart.gradientColors\"\r\n                        :gradient-stops=\"bigLineChart.gradientStops\"\r\n                        :extra-options=\"bigLineChart.extraOptions\">\r\n            </line-chart>\r\n          </div>\r\n        </card>\r\n      </div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"col-lg-4\" :class=\"{'text-right': isRTL}\">\r\n        <card type=\"chart\">\r\n          <template slot=\"header\">\r\n            <h5 class=\"card-category\">{{$t('dashboard.totalShipments')}}</h5>\r\n            <h3 class=\"card-title\"><i class=\"tim-icons icon-bell-55 text-primary \"></i> 763,215</h3>\r\n          </template>\r\n          <div class=\"chart-area\">\r\n            <line-chart style=\"height: 100%\"\r\n                        chart-id=\"purple-line-chart\"\r\n                        :chart-data=\"purpleLineChart.chartData\"\r\n                        :gradient-colors=\"purpleLineChart.gradientColors\"\r\n                        :gradient-stops=\"purpleLineChart.gradientStops\"\r\n                        :extra-options=\"purpleLineChart.extraOptions\">\r\n            </line-chart>\r\n          </div>\r\n        </card>\r\n      </div>\r\n      <div class=\"col-lg-4\" :class=\"{'text-right': isRTL}\">\r\n        <card type=\"chart\">\r\n          <template slot=\"header\">\r\n            <h5 class=\"card-category\">{{$t('dashboard.dailySales')}}</h5>\r\n            <h3 class=\"card-title\"><i class=\"tim-icons icon-delivery-fast text-info \"></i> 3,500€</h3>\r\n          </template>\r\n          <div class=\"chart-area\">\r\n            <bar-chart style=\"height: 100%\"\r\n                       chart-id=\"blue-bar-chart\"\r\n                       :chart-data=\"blueBarChart.chartData\"\r\n                       :gradient-stops=\"blueBarChart.gradientStops\"\r\n                       :extra-options=\"blueBarChart.extraOptions\">\r\n            </bar-chart>\r\n          </div>\r\n        </card>\r\n      </div>\r\n      <div class=\"col-lg-4\" :class=\"{'text-right': isRTL}\">\r\n        <card type=\"chart\">\r\n          <template slot=\"header\">\r\n            <h5 class=\"card-category\">{{$t('dashboard.completedTasks')}}</h5>\r\n            <h3 class=\"card-title\"><i class=\"tim-icons icon-send text-success \"></i> 12,100K</h3>\r\n          </template>\r\n          <div class=\"chart-area\">\r\n            <line-chart style=\"height: 100%\"\r\n                        chart-id=\"green-line-chart\"\r\n                        :chart-data=\"greenLineChart.chartData\"\r\n                        :gradient-stops=\"greenLineChart.gradientStops\"\r\n                        :extra-options=\"greenLineChart.extraOptions\">\r\n            </line-chart>\r\n          </div>\r\n        </card>\r\n      </div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"col-lg-6 col-md-12\">\r\n        <card type=\"tasks\" :header-classes=\"{'text-right': isRTL}\">\r\n          <template slot=\"header\">\r\n            <h6 class=\"title d-inline\">{{$t('dashboard.tasks', {count: 5})}}</h6>\r\n            <p class=\"card-category d-inline\">{{$t('dashboard.today')}}</p>\r\n            <base-dropdown menu-on-right=\"\"\r\n                           tag=\"div\"\r\n                           title-classes=\"btn btn-link btn-icon\"\r\n                           aria-label=\"Settings menu\"\r\n                           :class=\"{'float-left': isRTL}\">\r\n              <i slot=\"title\" class=\"tim-icons icon-settings-gear-63\"></i>\r\n              <a class=\"dropdown-item\" href=\"#pablo\">{{$t('dashboard.dropdown.action')}}</a>\r\n              <a class=\"dropdown-item\" href=\"#pablo\">{{$t('dashboard.dropdown.anotherAction')}}</a>\r\n              <a class=\"dropdown-item\" href=\"#pablo\">{{$t('dashboard.dropdown.somethingElse')}}</a>\r\n            </base-dropdown>\r\n          </template>\r\n          <div class=\"table-full-width table-responsive\">\r\n            <task-list></task-list>\r\n          </div>\r\n        </card>\r\n      </div>\r\n      <div class=\"col-lg-6 col-md-12\">\r\n        <card class=\"card\" :header-classes=\"{'text-right': isRTL}\">\r\n          <h4 slot=\"header\" class=\"card-title\">{{$t('dashboard.simpleTable')}}</h4>\r\n          <div class=\"table-responsive\">\r\n            <user-table></user-table>\r\n          </div>\r\n        </card>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\n  import LineChart from '@/components/Charts/LineChart';\r\n  import BarChart from '@/components/Charts/BarChart';\r\n  import * as chartConfigs from '@/components/Charts/config';\r\n  import TaskList from './Dashboard/TaskList';\r\n  import UserTable from './Dashboard/UserTable';\r\n  import config from '@/config';\r\n\r\n  export default {\r\n    components: {\r\n      LineChart,\r\n      BarChart,\r\n      TaskList,\r\n      UserTable\r\n    },\r\n    data() {\r\n      return {\r\n        bigLineChart: {\r\n          allData: [\r\n            [100, 70, 90, 70, 85, 60, 75, 60, 90, 80, 110, 100],\r\n            [80, 120, 105, 110, 95, 105, 90, 100, 80, 95, 70, 120],\r\n            [60, 80, 65, 130, 80, 105, 90, 130, 70, 115, 60, 130]\r\n          ],\r\n          activeIndex: 0,\r\n          chartData: null,\r\n          extraOptions: chartConfigs.purpleChartOptions,\r\n          gradientColors: config.colors.primaryGradient,\r\n          gradientStops: [1, 0.4, 0],\r\n          categories: []\r\n        },\r\n        purpleLineChart: {\r\n          extraOptions: chartConfigs.purpleChartOptions,\r\n          chartData: {\r\n            labels: ['JUL', 'AUG', 'SEP', 'OCT', 'NOV', 'DEC'],\r\n            datasets: [{\r\n              label: \"Data\",\r\n              fill: true,\r\n              borderColor: config.colors.primary,\r\n              borderWidth: 2,\r\n              borderDash: [],\r\n              borderDashOffset: 0.0,\r\n              pointBackgroundColor: config.colors.primary,\r\n              pointBorderColor: 'rgba(255,255,255,0)',\r\n              pointHoverBackgroundColor: config.colors.primary,\r\n              pointBorderWidth: 20,\r\n              pointHoverRadius: 4,\r\n              pointHoverBorderWidth: 15,\r\n              pointRadius: 4,\r\n              data: [80, 100, 70, 80, 120, 80],\r\n            }]\r\n          },\r\n          gradientColors: config.colors.primaryGradient,\r\n          gradientStops: [1, 0.2, 0],\r\n        },\r\n        greenLineChart: {\r\n          extraOptions: chartConfigs.greenChartOptions,\r\n          chartData: {\r\n            labels: ['JUL', 'AUG', 'SEP', 'OCT', 'NOV'],\r\n            datasets: [{\r\n              label: \"My First dataset\",\r\n              fill: true,\r\n              borderColor: config.colors.danger,\r\n              borderWidth: 2,\r\n              borderDash: [],\r\n              borderDashOffset: 0.0,\r\n              pointBackgroundColor: config.colors.danger,\r\n              pointBorderColor: 'rgba(255,255,255,0)',\r\n              pointHoverBackgroundColor: config.colors.danger,\r\n              pointBorderWidth: 20,\r\n              pointHoverRadius: 4,\r\n              pointHoverBorderWidth: 15,\r\n              pointRadius: 4,\r\n              data: [90, 27, 60, 12, 80],\r\n            }]\r\n          },\r\n          gradientColors: ['rgba(66,134,121,0.15)', 'rgba(66,134,121,0.0)', 'rgba(66,134,121,0)'],\r\n          gradientStops: [1, 0.4, 0],\r\n        },\r\n        blueBarChart: {\r\n          extraOptions: chartConfigs.barChartOptions,\r\n          chartData: {\r\n            labels: ['USA', 'GER', 'AUS', 'UK', 'RO', 'BR'],\r\n            datasets: [{\r\n              label: \"Countries\",\r\n              fill: true,\r\n              borderColor: config.colors.info,\r\n              borderWidth: 2,\r\n              borderDash: [],\r\n              borderDashOffset: 0.0,\r\n              data: [53, 20, 10, 80, 100, 45],\r\n            }]\r\n          },\r\n          gradientColors: config.colors.primaryGradient,\r\n          gradientStops: [1, 0.4, 0],\r\n        }\r\n      }\r\n    },\r\n    computed: {\r\n      enableRTL() {\r\n        return this.$route.query.enableRTL;\r\n      },\r\n      isRTL() {\r\n        return this.$rtl.isRTL;\r\n      },\r\n      bigLineChartCategories() {\r\n        return this.$t('dashboard.chartCategories');\r\n      }\r\n    },\r\n    methods: {\r\n      initBigChart(index) {\r\n        let chartData = {\r\n          datasets: [{\r\n            fill: true,\r\n            borderColor: config.colors.primary,\r\n            borderWidth: 2,\r\n            borderDash: [],\r\n            borderDashOffset: 0.0,\r\n            pointBackgroundColor: config.colors.primary,\r\n            pointBorderColor: 'rgba(255,255,255,0)',\r\n            pointHoverBackgroundColor: config.colors.primary,\r\n            pointBorderWidth: 20,\r\n            pointHoverRadius: 4,\r\n            pointHoverBorderWidth: 15,\r\n            pointRadius: 4,\r\n            data: this.bigLineChart.allData[index]\r\n          }],\r\n          labels: ['JAN', 'FEB', 'MAR', 'APR', 'MAY', 'JUN', 'JUL', 'AUG', 'SEP', 'OCT', 'NOV', 'DEC'],\r\n        }\r\n        this.$refs.bigChart.updateGradients(chartData);\r\n        this.bigLineChart.chartData = chartData;\r\n        this.bigLineChart.activeIndex = index;\r\n      }\r\n    },\r\n    mounted() {\r\n      this.i18n = this.$i18n;\r\n      if (this.enableRTL) {\r\n        this.i18n.locale = 'ar';\r\n        this.$rtl.enableRTL();\r\n      }\r\n      this.initBigChart(0);\r\n    },\r\n    beforeDestroy() {\r\n      if (this.$rtl.isRTL) {\r\n        this.i18n.locale = 'en';\r\n        this.$rtl.disableRTL();\r\n      }\r\n    }\r\n  };\r\n</script>\r\n<style>\r\n</style>\r\n"]}]}