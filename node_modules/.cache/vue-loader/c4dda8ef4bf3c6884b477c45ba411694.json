{"remainingRequest":"C:\\Users\\PC\\Desktop\\Otros\\DP1\\Front\\dp1_front-Redex\\Redex\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\PC\\Desktop\\Otros\\DP1\\Front\\dp1_front-Redex\\Redex\\src\\pages\\Maps.vue?vue&type=style&index=0&id=f9793c8a&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\PC\\Desktop\\Otros\\DP1\\Front\\dp1_front-Redex\\Redex\\src\\pages\\Maps.vue","mtime":1716422535573},{"path":"C:\\Users\\PC\\Desktop\\Otros\\DP1\\Front\\dp1_front-Redex\\Redex\\node_modules\\css-loader\\index.js","mtime":1715192470608},{"path":"C:\\Users\\PC\\Desktop\\Otros\\DP1\\Front\\dp1_front-Redex\\Redex\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1715192477909},{"path":"C:\\Users\\PC\\Desktop\\Otros\\DP1\\Front\\dp1_front-Redex\\Redex\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1715192468895},{"path":"C:\\Users\\PC\\Desktop\\Otros\\DP1\\Front\\dp1_front-Redex\\Redex\\node_modules\\vue-loader\\lib\\index.js","mtime":1715192477908}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\n.datetime-display {\r\n position: absolute;\r\n top: 10px;\r\n right: 10px;\r\n color: white;\r\n background-color: rgba(0, 0, 0, 0.7);\r\n padding: 5px 10px;\r\n border-radius: 5px;\r\n z-index: 1001; /* Asegúrate de que esté visible sobre el mapa */\r\n}\r\n\r\n.map-container {\r\n position: relative;\r\n height: 100vh;\r\n width: 100%;\r\n \r\n}\r\n\r\n.map-header {\r\n position: absolute;\r\n top: 0;\r\n left: 0;\r\n z-index: 1000;\r\n width: 100%;\r\n background-color: rgba(0, 0, 0, 0.5);\r\n padding: 10px;\r\n color: #fff;\r\n text-align: center;\r\n}\r\n\r\n.map-title {\r\n font-size: 1.5em;\r\n}\r\n\r\n.map-tagline {\r\n font-size: 1em;\r\n}\r\n\r\n.map-search-container {\r\n .map-search-container {\r\n position: absolute;\r\n top: 60px;\r\n left: 10px; /* Ajusta según necesidad */\r\n z-index: 1000;\r\n width: 200px; /* Ancho fijo para todos los inputs */\r\n padding: 10px;\r\n background-color: rgba(0, 0, 0, 0.5);\r\n display: flex;\r\n flex-direction: column; /* Cambio aquí */\r\n align-items: flex-start; /* Alinear al inicio (izquierda) */\r\n}\r\n}\r\n\r\n.search-input {\r\n flex: 1;\r\n margin: 0 5px;\r\n padding: 10px;\r\n border: none;\r\n border-radius: 5px;\r\n}\r\n\r\n.main-map {\r\n height: 100%;\r\n width: 100%;\r\n}\r\n\r\n.map-sidebar {\r\n position: absolute;\r\n top: 0;\r\n right: 0;\r\n z-index: 1000;\r\n height: 100%;\r\n width: 300px;\r\n background-color: rgba(0, 0, 0, 0.5);\r\n color: #fff;\r\n padding: 10px;\r\n display: flex;\r\n flex-direction: column;\r\n}\r\n\r\n\r\n.brand-title {\r\n font-size: 1em; /* Ajusta el tamaño como desees */\r\n color: #fff; /* Color para 'Redex' */\r\n font-weight: bold;\r\n}\r\n\r\n.brand-title-point {\r\n font-size: 1em; /* Asegúrate de que sea del mismo tamaño que .brand-title para alineación adecuada */\r\n color: #00B074; /* Color para el punto */\r\n font-weight: bold;\r\n}\r\n\r\n.brand-tagline {\r\n font-size: 1em; /* Ajusta el tamaño del tagline */\r\n color: #B9BBBD; /* Color para 'Always on Time' */\r\n font-weight: bold;\r\n margin-bottom: 199px;\r\n display: flex;\r\n align-items: baseline; /* Alinea correctamente el texto y el punto */\r\n gap: 0.2em; /* Ajusta el espacio entre 'Redex' y el punto */\r\n}\r\n\r\n/* Si deseas que 'Redex.' esté en una sola línea, puedes usar display: flex en el contenedor */\r\n.brand {\r\n display: flex;\r\n align-items: baseline; /* Alinea correctamente el texto y el punto */\r\n gap: 0.2em; /* Ajusta el espacio entre 'Redex' y el punto */\r\n \r\n margin-bottom: -5px; /* Ajusta esto para aumentar el espacio entre el título y el subtítulo */\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n.map-legend {\r\n color: black; /* Cambia el color de texto a negro */\r\n position: absolute;\r\n bottom: 120px;\r\n right: 20px;\r\n z-index: 1000;\r\n background: #fff;\r\n padding: 10px;\r\n border-radius: 5px;\r\n box-shadow: 0 2px 4px rgba(0,0,0,0.3);\r\n cursor: pointer;\r\n}\r\n\r\n.legend-toggle {\r\n background: #333;\r\n color: #fff;\r\n padding: 5px 10px;\r\n border: none;\r\n border-radius: 3px;\r\n cursor: pointer;\r\n display: block;\r\n width: 100%;\r\n text-align: center;\r\n}\r\n\r\n.legend-content {\r\n color: black;\r\n list-style: none;\r\n padding: 0;\r\n margin: 0; /* Remove margin-top when visible */\r\n display: none; /* Hidden by default */\r\n}\r\n\r\n.legend-content li {\r\n color: black; \r\n margin-bottom: 5px;\r\n display: flex;\r\n align-items: center;\r\n}\r\n\r\n.dot {\r\n\r\n height: 10px;\r\n width: 10px;\r\n border-radius: 50%;\r\n display: inline-block;\r\n margin-right: 10px;\r\n}\r\n\r\n.less-50 { background: red; }\r\n.between-50-80 { background: orange; }\r\n.greater-80 { background: green; }\r\n\r\n.icon {\r\n width: 16px;\r\n height: 16px;\r\n display: inline-block;\r\n background-size: contain;\r\n background-repeat: no-repeat;\r\n margin-right: 10px;\r\n}\r\n\r\n.modal-content {\r\n  background: white; /* Fondo blanco para alto contraste */\r\n  padding: 20px;\r\n  border-radius: 5px;\r\n  box-shadow: 0 4px 6px rgba(0,0,0,0.1);\r\n  color: black; /* Color de texto general a negro */\r\n  width: auto;\r\n  max-width: 500px; /* Ajusta el ancho máximo según necesites */\r\n  text-align: left; /* Asegura que el texto esté alineado a la izquierda */\r\n}\r\n\r\n.modal-content h2 {\r\n  color: red; /* Color rojo para el título del colapso */\r\n  font-weight: bold;\r\n  margin: 0 auto; /* Centra la imagen */\r\n}\r\n\r\n.modal-content strong {\r\n  color: red; /* Color rojo para las palabras clave */\r\n  font-weight: bold;\r\n}\r\n\r\n.modal-content p, .modal-content ul {\r\n  color: black; /* Resto del texto en negro */\r\n}\r\n\r\n.modal-button {\r\n  background-color: red; /* Fondo rojo para el botón */\r\n  color: white; /* Texto blanco para el botón */\r\n  padding: 10px 20px;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  margin-top: 10px; /* Espaciado superior para separarlo del contenido */\r\n  font-weight: bold;\r\n}\r\n\r\n.modal-button:hover {\r\n  background-color: darkred; /* Un rojo más oscuro al pasar el mouse */\r\n}\r\n.modal-content li strong {\r\n  color: black; /* Cambia el color de los términos clave a negro */\r\n  font-weight: normal; /* Si deseas que no sean bold */\r\n}\r\n\r\n.modal-content li {\r\n  color: black; /* Todos los textos de los items en negro */\r\n}\r\n.modal-overlay {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.7);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: 10000; /* Alto z-index para asegurar que está sobre otros elementos */\r\n}\r\n\r\n.collapse-icon {\r\n  background-image: url('/img/carita.png');\r\n  background-size: contain;\r\n  background-repeat: no-repeat;\r\n  width: 50px; /* Ajusta el tamaño según tus necesidades */\r\n  height: 50px; /* Ajusta el tamaño según tus necesidades */\r\n  display: block;\r\n  margin: 0 auto; /* Centra la imagen */\r\n}\r\n\r\n\r\n\r\n\r\n\r\n.modal-content-airport {\r\n  background: white; /* Fondo blanco para alto contraste */\r\n  padding: 20px;\r\n  border-radius: 5px;\r\n  box-shadow: 0 4px 6px rgba(0,0,0,0.1);\r\n  color: black; /* Color de texto general a negro */\r\n  width: auto;\r\n  max-width: 500px; /* Ajusta el ancho máximo según necesites */\r\n  text-align: left; /* Asegura que el texto esté alineado a la izquierda */\r\n  display: flex;\r\n  flex-direction: column; /* Alinea el contenido verticalmente */\r\n  align-items: left; /* Centra horizontalmente el contenido */\r\n}\r\n\r\n.modal-content-airport h2 {\r\n  color: #00B074; /* Color verde para el título del colapso */\r\n  font-weight: bold;\r\n  margin: 0 auto; /* Centra la imagen */\r\n}\r\n\r\n.modal-content-airport strong {\r\n  color: #00B074; /* Color verde para las palabras clave */\r\n  font-weight: bold;\r\n}\r\n\r\n.modal-content-airport p, .modal-content-airport ul {\r\n  color: black; /* Resto del texto en negro */\r\n}\r\n\r\n.modal-button-airport {\r\n  background-color: #00B074; /* Fondo verde para el botón */\r\n  color: white; /* Texto blanco para el botón */\r\n  padding: 10px 20px;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  margin-top: 10px; /* Espaciado superior para separarlo del contenido */\r\n  font-weight: bold;\r\n  align-self: center; /* Centra el botón horizontalmente */\r\n}\r\n\r\n.modal-button-airport:hover {\r\n  background-color: darkgreen; /* Un verde más oscuro al pasar el mouse */\r\n}\r\n\r\n.modal-content-airport li strong {\r\n  color: black; /* Cambia el color de los términos clave a negro */\r\n  font-weight: normal; /* Si deseas que no sean bold */\r\n}\r\n\r\n.modal-content-airport li {\r\n  color: black; /* Todos los textos de los items en negro */\r\n}\r\n\r\n.modal-overlay-airport {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.7);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: 10000; /* Alto z-index para asegurar que está sobre otros elementos */\r\n}\r\n\r\n\r\n\r\n.modal-content-flight {\r\n  background: white;\r\n  padding: 20px;\r\n  border-radius: 5px;\r\n  box-shadow: 0 4px 6px rgba(0,0,0,0.1);\r\n  color: black;\r\n  width: auto;\r\n  max-width: 500px;\r\n  text-align: left;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: left;\r\n}\r\n\r\n.modal-content-flight h2 {\r\n  color: #00B074;\r\n  font-weight: bold;\r\n  margin: 0 auto;\r\n}\r\n\r\n.modal-content-flight strong {\r\n  color: #00B074;\r\n  font-weight: bold;\r\n}\r\n\r\n.modal-content-flight p, .modal-content-flight ul {\r\n  color: black;\r\n}\r\n\r\n.modal-button-flight {\r\n  background-color: #00B074;\r\n  color: white;\r\n  padding: 10px 20px;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  margin-top: 10px;\r\n  font-weight: bold;\r\n  align-self: center;\r\n}\r\n\r\n.modal-button-flight:hover {\r\n  background-color: darkgreen;\r\n}\r\n\r\n.modal-overlay-flight {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.7);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: 10000;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n.airplane-icon { background-image: url('/img/avion.png'); }\r\n.airport-icon { background-image: url('/img/ubi.png'); }\r\n.airport-green { background-image: url('/img/airport-green.png'); }\r\n.airport-orange { background-image: url('/img/airport-orange.png'); }\r\n.airport-red { background-image: url('/img/airport-red.png'); }\r\n.flight-green { background-image: url('/img/flight-green.png'); }\r\n.flight-orange { background-image: url('/img/flight-orange.png'); }\r\n.flight-red { background-image: url('/img/flight-red.png'); }\r\n\r\n",{"version":3,"sources":["Maps.vue"],"names":[],"mappingsytCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Maps.vue","sourceRoot":"src/pages","sourcesContent":["<template>\r\n  \r\n  <div class=\"map-container\">\r\n   \r\n   <div class=\"datetime-display\">\r\n     {{ currentDateTime }}\r\n   </div>\r\n   <div class=\"map-search-container\">\r\n     \r\n     <input class=\"search-input\" type=\"text\" placeholder=\"Buscar envío\">\r\n     <input class=\"search-input\" type=\"text\" placeholder=\"Buscar aeropuerto\">\r\n     <input class=\"search-input\" type=\"text\" placeholder=\"Buscar vuelo\">\r\n   </div>\r\n   <div id=\"legend\" class=\"map-legend\">\r\n <button class=\"legend-toggle\" @click=\"toggleLegend\">\r\n   {{ isLegendOpen ? '▲ Cerrar Leyenda' : '▼ Abrir Leyenda' }}\r\n </button>\r\n <ul :style=\"{ display: isLegendOpen ? 'block' : 'none' }\" class=\"legend-content\">\r\n  \r\n   <li><span class=\"dot greater-80\"></span>Menor a 50%</li>\r\n   <li><span class=\"dot between-50-80\"></span>Entre 50% y 80%</li>\r\n   <li><span class=\"dot less-50\"></span>Mayor a 80%</li>\r\n   <li><span class=\"icon airplane-icon\"></span>Vuelo</li>\r\n   <li><span class=\"icon airport-icon\"></span>Aeropuerto</li>\r\n </ul>\r\n</div>\r\n\r\n   \r\n<MglMap\r\n   class=\"main-map\"\r\n   :accessToken=\"accessToken\"\r\n   :mapStyle=\"mapStyle\"\r\n   :center=\"center\"\r\n   :zoom=\"zoom\"\r\n   style=\"height:750px!important;\"\r\n   @load=\"onMapLoaded\"\r\n >\r\n />\r\n   <!-- Antes estaba asi si puede cambiar algo para despues\r\n <MglNavigationControl\r\n        position=\"top-center\">\r\n      </MglNavigationControl> \r\n    -->\r\n <MglGeojsonLayer\r\n        :sourceId=\"'aeropuertos'\"\r\n        :layerId=\"'aeropuertosLayer'\"\r\n        :type=\"'symbol'\"\r\n        :source=\"geojsonAeropuertos\"\r\n        :layout=\"{\r\n          'icon-image': ['get', 'icon-image'],\r\n          'icon-size': 1.0,\r\n          'icon-allow-overlap': true\r\n        }\"\r\n        @click=\"onAirportClick\"\r\n      />\r\n\r\n\r\n  <MglGeojsonLayer\r\n  v-for=\"(vuelo, index) in filteredVuelos\"\r\n  :key=\"`vuelo-layer-${index}`\"\r\n  :sourceId=\"`vuelo-${index}`\"\r\n  :layerId=\"`avion-${index}`\"\r\n  :type=\"'symbol'\"\r\n  :source=\"createGeojsonSourceForVuelo(vuelo)\"\r\n  :layout=\"{\r\n    'icon-image': ['get', 'icon-image'],\r\n    'icon-size': 1.0,\r\n    'icon-allow-overlap': true\r\n  }\"\r\n  @click=\"onFlightClick\"\r\n/>\r\n\r\n        <!-- Antes estaba asi si puede cambiar algo para despues\r\n    <MglGeojsonLayer\r\n      v-for=\"(envio, index) in envios\"\r\n      :key=\"`envio-layer-${index}`\"\r\n      :sourceId=\"`envio-${index}`\"\r\n      :layerId=\"`avionLayer-${envio.id}`\"\r\n      :type=\"'symbol'\"\r\n      :source=\"createGeojsonSourceForEnvio(envio)\"\r\n      :layout=\"{\r\n        'icon-image': ['get', 'icon-image'],\r\n        'icon-size': 1.0,\r\n        'icon-allow-overlap': true\r\n      }\"\r\n      @click=\"onFlightClick\"\r\n    />\r\n    -->\r\n </MglMap>\r\n\r\n <div class=\"row\" style=\"margin-top:40px!important\"> \r\n      <div class=\"col-md-3 pr-md-1\">\r\n        <base-input label=\"Fecha Inicio\"\r\n                  type=\"date\"\r\n                  format= \"yyyy-MM-dd\"\r\n                  placeholder=\"Fecha Inicio\"\r\n                  v-model=\"fecha_inicio_simulacion\">\r\n        </base-input>\r\n      </div>\r\n\r\n    </div>\r\n\r\n    <div v-for=\"modal in openFlightModals\" :key=\"modal.id\" class=\"modal-overlay-flight\" @click=\"closeFlightModal(modal.id)\">\r\n  <div class=\"modal-content-flight\" @click.stop>\r\n    <h2>Información del Vuelo</h2>\r\n    <p><strong>Ciudad Origen:</strong> {{ modal.data.ciudadOrigen }}</p>\r\n    <p><strong>Ciudad Destino:</strong> {{ modal.data.ciudadDestino }}</p>\r\n    <p><strong>Hora de Salida:</strong> {{ modal.data.horaSalida }}</p>\r\n    <p><strong>Hora de Llegada:</strong> {{ modal.data.horaLlegada }}</p>\r\n    <p><strong>Capacidad de Carga Máxima:</strong> {{ modal.data.capacidadCargaMaxima }}</p>\r\n    <p><strong>Capacidad de Carga Usado:</strong> {{ modal.data.capacidadCargaUsado }}</p>\r\n    <p><strong>Fecha de Salida:</strong> {{ modal.data.fechaHoraSalidaGMT0 }}</p>\r\n    <p><strong>Fecha de Llegada:</strong> {{ modal.data.fechaHoraLlegadaGMT0 }}</p>\r\n    <p><strong>Tiempo Estimado de Vuelo:</strong> {{ modal.data.tiempoEstimadoVuelo }}</p>\r\n    <button class=\"modal-button-flight\" @click=\"closeFlightModal(modal.id)\">Cerrar</button>\r\n  </div>\r\n</div>\r\n\r\n <div v-for=\"modal in openModals\" :key=\"modal.id\" class=\"modal-overlay-airport\" @click=\"closeAirportModal(modal.id)\">\r\n      <div class=\"modal-content-airport\" @click.stop>\r\n        <h2>Información del Aeropuerto</h2>\r\n        <p><strong>Nombre:</strong> {{ modal.data.nombreCiudad }}</p>\r\n        <p><strong>País:</strong> {{ modal.data.pais }}</p>\r\n        <p><strong>Capacidad de Almacenamiento Máximo:</strong> {{ modal.data.capacidadAlmacenamientoMaximo }}</p>\r\n        <p><strong>Capacidad de Almacenamiento Usado:</strong> {{ modal.data.capacidadDeAlmacenamientoUsado }}</p>\r\n        <p><strong>Coordenadas:</strong> {{ modal.data.coordinates.join(', ') }}</p>\r\n        <button class=\"modal-button-airport\" @click=\"closeAirportModal(modal.id)\">Cerrar</button>\r\n      </div>\r\n    </div>\r\n   <!-- <div id=\"map\" style=\"height:750px!important;\"></div> -->\r\n\r\n\r\n  <div v-if=\"isVisibleResumen\" >\r\n    <button class=\"modal-button\" @click=\"showModal\">Mostrar resumen de colapso</button>\r\n\r\n  </div>\r\n  <div v-if=\"isVisible\" class=\"modal-overlay\" @click=\"closeCollapseModal\">\r\n    <div class=\"modal-content\" @click.stop>\r\n      <div class=\"collapse-icon\"></div> <!-- Icono de colapso -->\r\n      <h2>COLAPSO LOGÍSTICO</h2>\r\n      <p>El sistema ha colapsado debido a un <strong>{{ collapseReason }}</strong>.</p>\r\n      <p><strong>Detalles del Colapso:</strong></p>\r\n      <ul>\r\n        <li><strong>Motivo:</strong> EXCESO DE PAQUETES EN AEROPUERTOS</li>\r\n        <li><strong>Lugar:</strong> Lima, Perú - SMTP</li>\r\n        <li><strong>Fecha:</strong> {{ currentDateTime }}</li>\r\n        <li><strong>Almacenes o Vuelos afectados:</strong> Brasil, Brasilia; New York, USA; Cali, Colombia</li>\r\n      </ul>\r\n      <button class=\"modal-button\" @click=\"closeCollapseModal\">Intentar de nuevo</button>\r\n    </div>\r\n  </div>\r\n\r\n\r\n   <div class=\"row\">\r\n     <div class=\"col-md-3\" style=\"margin-top:40px!important\" v-show=\"toggleIniciarDetener\"> \r\n       <b-button  v-b-modal.modal-iniciar slot=\"footer\" type=\"primary\" fill>Iniciar</b-button>\r\n       <b-modal id=\"modal-iniciar\"\r\n           @ok=\"iniciarSimulacion\">\r\n           ¿Deseas iniciar la simulación?\r\n       </b-modal>\r\n     </div>\r\n     <div class=\"col-md-3\" style=\"margin-top:40px!important\" v-show=\"!toggleIniciarDetener\"> \r\n       <b-button  v-b-modal.modal-cancelar slot=\"footer\" type=\"primary\" fill>Cancelar</b-button>\r\n       <b-modal id=\"modal-cancelar\"\r\n           @ok=\"cancelarSimulacion\">\r\n           ¿Deseas cancelar la simulación?\r\n       </b-modal>\r\n     </div>\r\n     <div class=\"col-md-3\" style=\"margin-top:40px!important\" v-show=\"!toggleIniciarDetener && !toggleReanudar\"> \r\n       <b-button  v-b-modal.modal-detener slot=\"footer\" type=\"primary\" fill>Detener</b-button>\r\n       <b-modal id=\"modal-detener\"\r\n           @ok=\"detenerSimulacion\">\r\n           ¿Deseas detener la simulacion?\r\n       </b-modal>\r\n     </div>\r\n     <div class=\"col-md-3\" style=\"margin-top:40px!important\" v-show=\"!toggleIniciarDetener && toggleReanudar\"> \r\n       <b-button  v-b-modal.modal-reanudar slot=\"footer\" type=\"primary\" fill>Reanudar</b-button>\r\n       <b-modal id=\"modal-reanudar\"\r\n           @ok=\"reanudarSimulacion\">\r\n           ¿Deseas reanudar la simulación?\r\n       </b-modal>\r\n     </div>\r\n     <div class=\"col-md-3\" style=\"margin-top:40px!important\">\r\n        <b-button @click=\"iniciarPlanificacion\" type=\"primary\" fill>Iniciar Planificacion</b-button>\r\n      </div>\r\n   \r\n   </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Mapbox from \"mapbox-gl\";\r\nimport {MglMap, MglNavigationControl, MglGeojsonLayer} from \"vue-mapbox\";\r\nimport Mapa from '@/store/map.json';\r\nimport Mapa2 from '@/store/map2.json';\r\nimport axios from 'axios';\r\nimport Authentication from '@/store/authentication.js';\r\nimport Simulation from '@/store/simulation.js';\r\n\r\n\r\nconst \r\naeropuertos = [\r\n/*{\r\n        id: 0,\r\n        codigoOACI: \"SKBO\",\r\n        nombreCiudad: \"Bogotá\",\r\n        pais: \"Colombia\",\r\n        codigoIATA: \"bogo\",\r\n        husoHorario: -5,\r\n        capacidadAlmacenamientoMaximo: 430,\r\n        capacidadDeAlmacenamientoUsado: 400,\r\n        latitud: \"4.70139\",\r\n        longitud: \"-74.1469\",\r\n        coordinates: [\"-74.1469\", \"4.70139\"],\r\n        usoAlmacenamiento: {}\r\n      },\r\n      {\r\n        id: 1,\r\n        codigoOACI: \"SEQM\",\r\n        nombreCiudad: \"Quito\",\r\n        pais: \"Ecuador\",\r\n        codigoIATA: \"quit\",\r\n        husoHorario: -5,\r\n        capacidadAlmacenamientoMaximo: 410,\r\n        capacidadDeAlmacenamientoUsado: 240,\r\n        latitud: \"0.113333\",\r\n        longitud: \"-78.3583\",\r\n        coordinates: [\"-78.3583\", \"0.113333\"],\r\n        usoAlmacenamiento: {}\r\n      },\r\n      {\r\n        id: 2,\r\n        codigoOACI: \"SVMI\",\r\n        nombreCiudad: \"Caracas\",\r\n        pais: \"Venezuela\",\r\n        codigoIATA: \"cara\",\r\n        husoHorario: -4,\r\n        capacidadAlmacenamientoMaximo: 400,\r\n        capacidadDeAlmacenamientoUsado: 0,\r\n        latitud: \"10.6031\",\r\n        longitud: \"-66.9903\",\r\n        coordinates: [\"-66.9903\", \"10.6031\"],\r\n        usoAlmacenamiento: {}\r\n      },\r\n      {\r\n        id: 3,\r\n        codigoOACI: \"SBBR\",\r\n        nombreCiudad: \"Brasilia\",\r\n        pais: \"Brasil\",\r\n        codigoIATA: \"bras\",\r\n        husoHorario: -3,\r\n        capacidadAlmacenamientoMaximo: 480,\r\n        capacidadDeAlmacenamientoUsado: 0,\r\n        latitud: \"-15.8645\",\r\n        longitud: \"-47.9178\",\r\n        coordinates: [\"-47.9178\", \"-15.8645\"],\r\n        usoAlmacenamiento: {}\r\n      }*/\r\n    ];\r\n\r\n\r\n    const calendarioVuelos = {\r\n      \"2024-01-11\": [\r\n            {\r\n                \"id\": 1,\r\n                \"ciudadOrigen\": \"RKSI\",\r\n                \"ciudadDestino\": \"LOWW\",\r\n                \"horaSalida\": \"00:01:00\",\r\n                \"horaLlegada\": \"20:36:00\",\r\n                \"capacidadCargaMaxima\": 340,\r\n                \"capacidadCargaUsado\": 0,\r\n                \"fechaSalida\": \"2024-01-02\",\r\n                \"fechaLlegada\": \"2024-01-02\",\r\n                \"tiempoEstimadoVuelo\": \"PT3H35M\",\r\n                \"fechaHoraSalidaGMT0\": \"2024-01-10T15:01:00\",\r\n                \"fechaHoraLlegadaGMT0\": \"2024-01-10T18:36:00\",\r\n                \"latitud\": \"37Â° 27' 48\\\" N\",\r\n                \"longitud\": \"126Â° 26' 24\\\" E\",\r\n                \"origen\": [\r\n                    126.44,\r\n                    37.46333333333334\r\n                ],\r\n                \"destino\": [\r\n                    16.570833333333333,\r\n                    48.11083333333333\r\n                ]\r\n            },\r\n            {\r\n                \"id\": 2,\r\n                \"ciudadOrigen\": \"RKSI\",\r\n                \"ciudadDestino\": \"VTBS\",\r\n                \"horaSalida\": \"00:09:00\",\r\n                \"horaLlegada\": \"03:31:00\",\r\n                \"capacidadCargaMaxima\": 340,\r\n                \"capacidadCargaUsado\": 0,\r\n                \"fechaSalida\": \"2024-01-02\",\r\n                \"fechaLlegada\": \"2024-01-02\",\r\n                \"tiempoEstimadoVuelo\": \"PT5H22M\",\r\n                \"fechaHoraSalidaGMT0\": \"2024-01-10T15:09:00\",\r\n                \"fechaHoraLlegadaGMT0\": \"2024-01-10T20:31:00\",\r\n                \"latitud\": \"37Â° 27' 48\\\" N\",\r\n                \"longitud\": \"126Â° 26' 24\\\" E\",\r\n                \"origen\": [\r\n                    126.44,\r\n                    37.46333333333334\r\n                ],\r\n                \"destino\": [\r\n                    100.74722222222222,\r\n                    13.680833333333332\r\n                ]\r\n            },\r\n            {\r\n                \"id\": 3,\r\n                \"ciudadOrigen\": \"RKSI\",\r\n                \"ciudadDestino\": \"UMMS\",\r\n                \"horaSalida\": \"00:20:00\",\r\n                \"horaLlegada\": \"22:03:00\",\r\n                \"capacidadCargaMaxima\": 300,\r\n                \"capacidadCargaUsado\": 0,\r\n                \"fechaSalida\": \"2024-01-02\",\r\n                \"fechaLlegada\": \"2024-01-02\",\r\n                \"tiempoEstimadoVuelo\": \"PT3H43M\",\r\n                \"fechaHoraSalidaGMT0\": \"2024-01-10T15:20:00\",\r\n                \"fechaHoraLlegadaGMT0\": \"2024-01-10T19:03:00\",\r\n                \"latitud\": \"37Â° 27' 48\\\" N\",\r\n                \"longitud\": \"126Â° 26' 24\\\" E\",\r\n                \"origen\": [\r\n                    126.44,\r\n                    37.46333333333334\r\n                ],\r\n                \"destino\": [\r\n                    28.0325,\r\n                    53.8825\r\n                ]\r\n            },\r\n          ]\r\n    };\r\n\r\n\r\nconst       envios = [\r\n      {\r\n        id: 0,\r\n        idEnvio: \"SBBR000000001\",\r\n        ciudadOrigen: \"SBBR\",\r\n        ciudadDestino: \"SEQM\",\r\n        fechaEnvio: \"2024-03-03\",\r\n        horaEnvio: \"00:01:00\",\r\n        cantidadPaquetes: 2,\r\n       // estadoEnvio: null,\r\n        ruta: {\r\n          id: 0,\r\n          vuelos: [\r\n            {\r\n              id: 0,\r\n              ciudadOrigen: \"SBBR\",\r\n              ciudadDestino: \"SEQM\",\r\n              horaSalida: \"02:16:00\",\r\n              horaLlegada: \"14:08:00\",\r\n              capacidadCargaMaxima: 340,\r\n              capacidadCargaUsado: 300,\r\n              fechaSalida: \"2024-03-03\",\r\n              fechaLlegada: \"2024-03-03\",\r\n              tiempoEstimadoVuelo: \"PT6H52M\",\r\n              origen: [-47.9178, -15.8645], // Bogotá\r\n              destino: [-78.3583, 0.113333], // Quito\r\n            }\r\n          ],\r\n          fitness: 33908.51018350059,\r\n          cantidadVuelos: 1\r\n        }\r\n      },\r\n      {\r\n        id: 1,\r\n        idEnvio: \"SVMI000000001\",\r\n        ciudadOrigen: \"SVMI\",\r\n        ciudadDestino: \"SKBO\",\r\n        fechaEnvio: \"2024-01-03\",\r\n        horaEnvio: \"00:03:00\",\r\n        cantidadPaquetes: 2,\r\n      //  estadoEnvio: null,\r\n        ruta: {\r\n          id: 1,\r\n          vuelos: [\r\n            {\r\n              id: 1,\r\n              ciudadOrigen: \"SVMI\",\r\n              ciudadDestino: \"SBBR\",\r\n              horaSalida: \"02:05:00\",\r\n              horaLlegada: \"07:28:00\",\r\n              capacidadCargaMaxima: 300,\r\n              capacidadCargaUsado: 2,\r\n              fechaSalida: \"2024-01-03\",\r\n              fechaLlegada: \"2024-01-03\",\r\n              tiempoEstimadoVuelo: \"PT6H23M\",\r\n              origen: [-66.9903, 10.6031], // Bogotá\r\n              destino:[-47.9178, -15.8645], // Quito\r\n            },\r\n            {\r\n              id: 2,\r\n              ciudadOrigen: \"SBBR\",\r\n              ciudadDestino: \"SEQM\",\r\n              horaSalida: \"15:33:00\",\r\n              horaLlegada: \"17:14:00\",\r\n              capacidadCargaMaxima: 300,\r\n              capacidadCargaUsado: 280,\r\n              fechaSalida: \"2024-01-03\",\r\n              fechaLlegada: \"2024-01-03\",\r\n              tiempoEstimadoVuelo: \"PT2H41M\",\r\n              origen:[-47.9178, -15.8645], // Bogotá\r\n              destino: [-78.3583, 0.113333],  // Quito\r\n            },\r\n            {\r\n              id: 3,\r\n              ciudadOrigen: \"SEQM\",\r\n              ciudadDestino: \"SKBO\",\r\n              horaSalida: \"19:28:00\",\r\n              horaLlegada: \"06:08:00\",\r\n              capacidadCargaMaxima: 360,\r\n              capacidadCargaUsado: 390,\r\n              fechaSalida: \"2024-01-03\",\r\n              fechaLlegada: \"2024-01-04\",\r\n              tiempoEstimadoVuelo: \"PT15H40M\",\r\n              origen: [-78.3583, 0.113333], // Bogotá\r\n              destino:  [-74.1469, 4.70139],  // Quito\r\n            }\r\n\r\n          ],\r\n          fitness: 32067.93361867229,\r\n          cantidadVuelos: 3\r\n        }\r\n      }\r\n    ];\r\n\r\n\r\n\r\n\r\nexport default {\r\n  props: ['title', 'content', 'isVisible','isVisibleResumen'],\r\n components: {\r\n   MglMap,\r\n   MglNavigationControl,\r\n   MglGeojsonLayer\r\n },\r\n data() {\r\n   return {\r\n    simulationDateTime: null,\r\n    simulationInterval: null,\r\n    realTimePerSimulatedSecond: 1000 / (60 * 6), // 1 second real time = 6 minutes simulated time\r\n    openModals: [],\r\n    openFlightModals: [],\r\n    isModalVisible: false,\r\n    isVisibleResumen: false,\r\n    isVisible: false,\r\n    collapseReason: \"\",\r\n     isLegendOpen: false,\r\n     isAnimating: false,\r\n     envios: envios,\r\n     calendarioVuelos: {},\r\n     currentDateTime: new Date().toLocaleString('es-ES', { \r\n       timeZone: 'America/Lima', \r\n       year: 'numeric',\r\n       month: '2-digit',\r\n       day: '2-digit',\r\n       hour: '2-digit', \r\n       minute: '2-digit', \r\n       timeZoneName: 'short' \r\n     }),\r\n     toggleIniciarDetener: true,\r\n     toggleReanudar: false,\r\n     accessToken: this.$store.state.map.token, // your access token. Needed if you using Mapbox maps\r\n     mapStyle: 'mapbox://styles/mapbox/dark-v10',\r\n     center: [5,15],\r\n     zoom: 2,\r\n    \r\n\r\n     myInterval: null,\r\n     myIntervalReplan:null,\r\n\r\n     fecha_inicio_simulacion: '',\r\n     fecha_fin_simulacion: null,\r\n\r\n     type: [\"\", \"info\", \"success\", \"warning\", \"danger\"],\r\n     notifications: {\r\n       topCenter: false\r\n     },\r\n\r\n     geojsonAeropuertos: {\r\n       type: 'FeatureCollection',\r\n       features: aeropuertos.map(a => ({\r\n         type: 'Feature',\r\n         geometry: {\r\n           type: 'Point',\r\n           coordinates: a.coordinates\r\n         },\r\n         properties: {\r\n            ...a,\r\n            'icon-image': this.calculateIcon(a.capacidadDeAlmacenamientoUsado / a.capacidadAlmacenamientoMaximo)\r\n          }\r\n       }))\r\n     },\r\n\r\n\r\n\r\n     createGeojsonSourceForEnvio(envio) {\r\n  return {\r\n    type: 'FeatureCollection',\r\n    features: envio.ruta.vuelos.map(vuelo => ({\r\n      type: 'Feature',\r\n      properties: {\r\n        id: vuelo.id,\r\n        'icon-image': this.calculateFlightIcon(vuelo.capacidadCargaUsado, vuelo.capacidadCargaMaxima)\r\n      },\r\n      geometry: {\r\n        type: 'Point',\r\n        coordinates: vuelo.origen\r\n      }\r\n    }))\r\n  };\r\n},\r\n\r\n  createGeojsonSourceForVuelo(vuelo) {\r\n    return {\r\n      type: 'FeatureCollection',\r\n      features: [{\r\n        type: 'Feature',\r\n        properties: {\r\n          id: vuelo.id,\r\n          'icon-image': this.calculateFlightIcon(vuelo.capacidadCargaUsado, vuelo.capacidadCargaMaxima)\r\n        },\r\n        geometry: {\r\n          type: 'Point',\r\n          coordinates: vuelo.origen\r\n        }\r\n      }]\r\n    };\r\n  },\r\n  // Otras funciones...\r\n\r\n \r\n      envios: [\r\n      {\r\n        id: 0,\r\n        idEnvio: \"SBBR000000001\",\r\n        ciudadOrigen: \"SBBR\",\r\n        ciudadDestino: \"SEQM\",\r\n        fechaEnvio: \"2024-03-03\",\r\n        horaEnvio: \"00:01:00\",\r\n        cantidadPaquetes: 2,\r\n        estadoEnvio: null,\r\n        ruta: {\r\n          id: 0,\r\n          vuelos: [\r\n            {\r\n              id: 0,\r\n              ciudadOrigen: \"SBBR\",\r\n              ciudadDestino: \"SEQM\",\r\n              horaSalida: \"02:16:00\",\r\n              horaLlegada: \"14:08:00\",\r\n              capacidadCargaMaxima: 340,\r\n              capacidadCargaUsado: 300,\r\n              fechaSalida: \"2024-03-03\",\r\n              fechaLlegada: \"2024-03-03\",\r\n              tiempoEstimadoVuelo: \"PT6H52M\",\r\n              origen: [-47.9178, -15.8645], // Bogotá\r\n              destino: [-78.3583, 0.113333], // Quito\r\n            }\r\n          ],\r\n          fitness: 33908.51018350059,\r\n          cantidadVuelos: 1\r\n        }\r\n      },\r\n      {\r\n        id: 1,\r\n        idEnvio: \"SVMI000000001\",\r\n        ciudadOrigen: \"SVMI\",\r\n        ciudadDestino: \"SKBO\",\r\n        fechaEnvio: \"2024-01-03\",\r\n        horaEnvio: \"00:03:00\",\r\n        cantidadPaquetes: 2,\r\n        estadoEnvio: null,\r\n        ruta: {\r\n          id: 1,\r\n          vuelos: [\r\n            {\r\n              id: 1,\r\n              ciudadOrigen: \"SVMI\",\r\n              ciudadDestino: \"SBBR\",\r\n              horaSalida: \"02:05:00\",\r\n              horaLlegada: \"07:28:00\",\r\n              capacidadCargaMaxima: 300,\r\n              capacidadCargaUsado: 2,\r\n              fechaSalida: \"2024-01-03\",\r\n              fechaLlegada: \"2024-01-03\",\r\n              tiempoEstimadoVuelo: \"PT6H23M\",\r\n              origen: [-66.9903, 10.6031], // Bogotá\r\n              destino:[-47.9178, -15.8645], // Quito\r\n            },\r\n            {\r\n              id: 2,\r\n              ciudadOrigen: \"SBBR\",\r\n              ciudadDestino: \"SEQM\",\r\n              horaSalida: \"15:33:00\",\r\n              horaLlegada: \"17:14:00\",\r\n              capacidadCargaMaxima: 300,\r\n              capacidadCargaUsado: 280,\r\n              fechaSalida: \"2024-01-03\",\r\n              fechaLlegada: \"2024-01-03\",\r\n              tiempoEstimadoVuelo: \"PT2H41M\",\r\n              origen:[-47.9178, -15.8645], // Bogotá\r\n              destino: [-78.3583, 0.113333],  // Quito\r\n            },\r\n            {\r\n              id: 3,\r\n              ciudadOrigen: \"SEQM\",\r\n              ciudadDestino: \"SKBO\",\r\n              horaSalida: \"19:28:00\",\r\n              horaLlegada: \"06:08:00\",\r\n              capacidadCargaMaxima: 360,\r\n              capacidadCargaUsado: 390,\r\n              fechaSalida: \"2024-01-03\",\r\n              fechaLlegada: \"2024-01-04\",\r\n              tiempoEstimadoVuelo: \"PT15H40M\",\r\n              origen: [-78.3583, 0.113333], // Bogotá\r\n              destino:  [-74.1469, 4.70139],  // Quito\r\n            }\r\n\r\n          ],\r\n          fitness: 32067.93361867229,\r\n          cantidadVuelos: 3\r\n        }\r\n      }\r\n    ],\r\n     currentFlightIndex: 0,\r\n     isSimulating: false,\r\n    \r\n    \r\n     \r\n   }\r\n },\r\n mounted(){\r\n  console.log(\"Aeropuertos disponibles:\", aeropuertos);\r\n  console.log(\"Vuelos disponibles:\", calendarioVuelos);\r\n\r\n  this.fetchAeropuertos();\r\n   let vue = this;\r\n   this.updateTime();\r\n   this.map.on('load', () => {\r\n    this.loadImages(() => {\r\n      this.setupAirportLayer();\r\n      \r\n      setInterval(() => {\r\n        this.updateAirportCapacities();\r\n        this.updateFlightCapacities();\r\n        this.checkForCollapse();\r\n      }, 1000);  // Actualiza cada segundo\r\n    });\r\n  });\r\n },\r\n destroyed(){\r\n  clearInterval(this.setInterval); \r\n },\r\n methods: {\r\n  fetchAeropuertos() {\r\n    axios.get('http://localhost/api/aeropuertos')\r\n      .then(response => {\r\n        this.aeropuertos = response.data;\r\n        this.geojsonAeropuertos.features = this.aeropuertos.map(a => ({\r\n          type: 'Feature',\r\n          geometry: {\r\n            type: 'Point',\r\n            coordinates: a.coordinates\r\n          },\r\n          properties: {\r\n            ...a,\r\n            'icon-image': this.calculateIcon(a.capacidadDeAlmacenamientoUsado / a.capacidadAlmacenamientoMaximo)\r\n          }\r\n        }));\r\n        if (this.map && this.map.getSource('aeropuertos')) {\r\n          this.map.getSource('aeropuertos').setData(this.geojsonAeropuertos);\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.error(\"Error fetching aeropuertos:\", error);\r\n      });\r\n  },\r\n\r\n   toggleLegend() {\r\n     this.isLegendOpen = !this.isLegendOpen;\r\n   },\r\n\r\n\r\n   calculateIcon(capacityRatio) {\r\n    if (capacityRatio < 0.50) return 'airport-green';\r\n    else if (capacityRatio < 0.80) return 'airport-orange';\r\n    return 'airport-red';\r\n  },\r\n\r\n\r\n  \r\n  calculateFlightIcon(capacidadCargaUsado, capacidadCargaMaxima) {\r\n  const ratio = capacidadCargaUsado / capacidadCargaMaxima;\r\n  if (ratio < 0.50) return 'flight-green';  // Ensure these icons exist in your Mapbox style\r\n  else if (ratio < 0.80) return 'flight-orange';\r\n  else return 'flight-red';\r\n},\r\n\r\n\r\n\r\n  updateAirportCapacities() {\r\n  this.geojsonAeropuertos.features = this.aeropuertos.map(a => {\r\n    let usageRatio = a.capacidadDeAlmacenamientoUsado / a.capacidadAlmacenamientoMaximo;\r\n    return {\r\n      type: 'Feature',\r\n      geometry: {\r\n        type: 'Point',\r\n        coordinates: a.coordinates\r\n      },\r\n      properties: {\r\n        ...a,\r\n        'icon-image': this.calculateIcon(usageRatio) // Asegúrate de que la propiedad se llama 'icon-image'\r\n      }\r\n    };\r\n  });\r\n  if (this.map && this.map.getSource('aeropuertos')) {\r\n    this.map.getSource('aeropuertos').setData(this.geojsonAeropuertos);\r\n  }\r\n},\r\n\r\n\r\n\r\n\r\nupdateFlightCapacities() {\r\n  this.envios.forEach(envio => {\r\n    envio.ruta.vuelos.forEach(vuelo => {\r\n      // Aquí podrías actualizar la capacidad usada basado en alguna lógica o simulación\r\n      vuelo.capacidadCargaUsado = Math.max(0, Math.min(vuelo.capacidadCargaMaxima, vuelo.capacidadCargaUsado + (Math.random() * 20 - 10)));\r\n      this.updateFlightOnMap(vuelo, envio.id);\r\n    });\r\n  });\r\n},\r\n\r\n\r\n\r\nupdateFlightOnMap(vuelo, envioId) {\r\n  if ( vuelo.capacidadCargaUsado > vuelo.capacidadCargaMaxima) {\r\n    console.log(\"Collapse detected!\");\r\n    this.showModal();\r\n  }\r\n  const sourceId = `envio-${envioId}`;\r\n    if (this.map.getSource(sourceId)) {\r\n      this.map.getSource(sourceId).setData({\r\n        type: 'Feature',\r\n        properties: {\r\n          id: vuelo.id,\r\n          'icon-image': this.calculateFlightIcon(vuelo.capacidadCargaUsado, vuelo.capacidadCargaMaxima)\r\n        },\r\n        geometry: {\r\n          type: 'Point',\r\n          coordinates: vuelo.origen\r\n        }\r\n      });\r\n    } else {\r\n      console.error(`Source ${sourceId} not found!`);\r\n    }\r\n  \r\n\r\n},\r\n\r\n\r\n  \r\nupdateTime() {\r\n    if (!this.fecha_inicio_simulacion) {\r\n      console.error(\"Fecha de inicio de simulación no está definida\");\r\n      return;\r\n    }\r\n\r\n    //const startDateTime = new Date(this.fecha_inicio_simulacion + 'T00:00:00Z');\r\n    const startDateTime = new Date('2024-01-07T14:30:00Z');\r\n    \r\n    this.simulationDateTime = startDateTime;\r\n    this.updateCurrentDateTimeDisplay();\r\n\r\n    this.simulationInterval = setInterval(() => {\r\n      this.simulationDateTime = new Date(this.simulationDateTime.getTime() + 360000); // Agregar// Agregar 6 minutos al tiempo de simulación cada segundo en tiempo real\r\n      this.updateCurrentDateTimeDisplay();\r\n      this.checkAndAnimateFlights();\r\n    }, 1000);\r\n  },\r\n\r\n  checkAndAnimateFlights() {\r\n    const currentTime = this.simulationDateTime.getTime();\r\n    console.log(`Tiempo de simulación actual: ${new Date(currentTime).toISOString()}`);\r\n    this.pendingFlights.forEach(vuelo => {\r\n      const vueloStartTime = new Date(vuelo.fechaHoraSalidaGMT0).getTime();\r\n\r\nconst cincoHorasEnMilisegundos = 5 * 60 * 60 * 1000; // 5 horas convertidas a milisegundos\r\nconst nuevoVueloStartTime = new Date(vueloStartTime - cincoHorasEnMilisegundos);\r\n      if (currentTime >= nuevoVueloStartTime && !vuelo.animated) {\r\n        vuelo.animated = true; // Marcar el vuelo como animado\r\n        console.log(`Animando vuelo con ID ${vuelo.id} a las ${new Date(vueloStartTime).toISOString()}`);\r\n        this.animateFlight(vuelo);\r\n      }\r\n    });\r\n    this.pendingFlights = this.pendingFlights.filter(vuelo => !vuelo.animated); // Remover los vuelos animados\r\n  },\r\n  updateCurrentDateTimeDisplay() {\r\n    this.currentDateTime = this.simulationDateTime.toLocaleString('es-ES', {\r\n      timeZone: 'UTC',\r\n      year: 'numeric',\r\n      month: '2-digit',\r\n      day: '2-digit',\r\n      hour: '2-digit',\r\n      minute: '2-digit',\r\n      timeZoneName: 'short'\r\n    });\r\n  },\r\n\r\nloadImages(callback) {\r\n  let imagesToLoad = ['airport-green', 'airport-orange', 'airport-red', 'flight-green', 'flight-orange', 'flight-red'];\r\n  let loadedImages = 0;\r\n  const totalImages = imagesToLoad.length;\r\n  const imageLoaded = () => {\r\n   loadedImages++;\r\n   if (loadedImages === imagesToLoad.length ) {\r\n     callback();\r\n   }\r\n };\r\n  imagesToLoad.forEach(icon => {\r\n    this.map.loadImage(`/img/${icon}.png`, (error, image) => {\r\n      if (error) {\r\n        console.error(`Error loading image: /img/${icon}.png`, error);\r\n        return;\r\n      }\r\n      this.map.addImage(icon, image);\r\n      loadedImages++;\r\n      imageLoaded();\r\n    });\r\n  });\r\n},\r\n\r\n\r\nonMapLoaded(event) {\r\n  // Establecer referencia al mapa en componente y store global si es necesario\r\n  this.map = event.map;\r\n  this.$store.map = event.map;\r\n\r\n  // Cargar todas las imágenes necesarias antes de configurar las capas\r\n  this.loadImages(() => {\r\n    // Una vez que las imágenes estén cargadas, configurar las capas\r\n    this.setupAirportLayer(); // Configurar la capa de aeropuertos primero\r\n   // this.setupFlightLayers(); // Configurar las capas de vuelos después\r\n   this.map.on('click', 'aeropuertosLayer', this.onAirportClick);\r\n\r\n    // Animar vuelos solo después de que todo está correctamente configurado\r\n    this.animateFlights();  // Luego inicia la animación\r\n    \r\n  });\r\n},\r\n\r\n\r\nsetupAirportLayer() {\r\n  if (!this.map.getSource('aeropuertos')) {\r\n    this.map.addSource('aeropuertos', {\r\n      type: 'geojson',\r\n      data: this.geojsonAeropuertos\r\n    });\r\n  }\r\n\r\n  if (!this.map.getLayer('aeropuertosLayer')) {\r\n    this.map.addLayer({\r\n      id: 'aeropuertosLayer',\r\n      type: 'symbol',\r\n      source: 'aeropuertos',\r\n      layout: {\r\n        'icon-image': ['get', 'icon-image'],\r\n        'icon-size': 1.0,\r\n        'icon-allow-overlap': true\r\n      }\r\n    });\r\n  }\r\n},\r\n\r\n\r\niniciarSimulacion() {\r\n let vue = this;\r\n vue.toggleIniciarDetener = false;\r\n vue.toggleReanudar = false;\r\n this.isAnimating = true;\r\n if (!this.isSimulating) {\r\n   this.isSimulating = true;\r\n   this.updateTime(); \r\n //  this.setupFlightLayers();  // Configura las capas primero\r\n  // this.animateFlights();  // Luego inicia la animación\r\n };\r\n /*this.envios.forEach(envio => {\r\n      envio.ruta.vuelos.forEach(vuelo => {\r\n        vuelo.capacidadCargaUsado += envio.cantidadPaquetes;  // Incrementar capacidad usada al iniciar el vuelo\r\n        this.updateAirportCapacitiesColapse(vuelo.ciudadOrigen, -envio.cantidadPaquetes); // Disminuir capacidad usada al iniciar el vuelo\r\n      });\r\n      //this.animateEnvio(envio);\r\n    });*/\r\n},\r\n\r\nasync iniciarPlanificacion() {\r\ntry {\r\n      // Iniciar la simulación\r\n      const response = await axios.get('http://localhost/api/simulacion/semanal/iniciar');\r\n      console.log(\"Simulación iniciada:\", response.data);\r\n      await this.checkSimulationStatus();\r\n\r\n// Esperar un tiempo antes de obtener los resultados\r\nsetTimeout(async () => {\r\n  await this.fetchSimulationResults();\r\n}, 25000); // Ajusta el tiempo de espera según sea necesario\r\n\r\n    \r\n\r\n    } catch (error) {\r\n      console.error(\"Error iniciando simulación:\", error);\r\n    }\r\n  },\r\n\r\n\r\n  async checkSimulationStatus() {\r\n    try {\r\n      const response = await axios.get('http://localhost/api/simulacion/semanal/estado');\r\n      console.log(\"Estado de la simulación:\", response.data);\r\n      // Manejar la respuesta de estado si es necesario\r\n    } catch (error) {\r\n      console.error(\"Error verificando estado de simulación:\", error);\r\n    }\r\n  },\r\n\r\n  async fetchSimulationResults() {\r\n    try {\r\n      const response = await axios.get('http://localhost/api/simulacion/semanal/resultados');\r\n      console.log(\"Resultados de la simulación:\", response.data);\r\n\r\n      const fetchedVuelos = response.data.calendarioVuelos;\r\n      const fechaInicio = new Date('2024-01-01T00:00:00');\r\n      const fechaFin = new Date(fechaInicio);\r\n      fechaFin.setDate(fechaFin.getDate() + 7);\r\n\r\n      const filteredVuelos = {};\r\n      this.pendingFlights = [];\r\n\r\n      let count = 0;\r\n\r\n      Object.keys(fetchedVuelos).forEach(fecha => {\r\n        if (count >= 20) return;\r\n        const fechaVuelo = new Date(fecha);\r\n        if (fechaVuelo >= fechaInicio && fechaVuelo <= fechaFin) {\r\n          console.log(fechaVuelo+\"  \"+fechaInicio+\"   \"+ fechaFin);\r\n          const vuelosDelDia = fetchedVuelos[fecha];\r\n          filteredVuelos[fecha] = [];\r\n          vuelosDelDia.forEach(vuelo => {\r\n            if (count < 20) {\r\n              vuelo.animated = false; // Agregar propiedad animated\r\n              filteredVuelos[fecha].push(vuelo);\r\n              this.pendingFlights.push(vuelo);\r\n              count++;\r\n            }\r\n          });\r\n        }\r\n      });\r\n      this.calendarioVuelos = filteredVuelos;\r\n      console.log(\"Vuelos disponibles ACTUALIZADOS:\", filteredVuelos);\r\n    } catch (error) {\r\n      console.error(\"Error obteniendo resultados de la simulación:\", error);\r\n    }\r\n  },\r\n\r\n\r\nanimateFlights() {\r\n        console.log(\"Animating Flights with filtered flights:\", JSON.stringify(this.filteredVuelos, null, 2));\r\n        this.filteredVuelos.forEach(vuelo => {\r\n            this.animateFlight(vuelo);\r\n        });\r\n    },\r\n\r\n /*   animateEnvio(envio) {\r\n      let currentFlight = 0;\r\n      const moveNextFlight = () => {\r\n        if (currentFlight < envio.ruta.vuelos.length) {\r\n          this.animateFlight(envio.ruta.vuelos[currentFlight],envio.cantidadPaquetes ,envio.id, () => {\r\n            currentFlight++;\r\n            moveNextFlight();\r\n          });\r\n        }\r\n      };\r\n      moveNextFlight();\r\n    },\r\n\r\n*/\r\n    animateFlight(vuelo ) {\r\n      if ( vuelo.capacidadCargaUsado > vuelo.capacidadCargaMaxima) {\r\n\r\n    this.collapseReason = 'EXCESO DE PAQUETES EN VUELOS';\r\n    console.log(\"Collapse detected!\");\r\n    //this.showCollapseAlert(\"collapseReason\", \"llapseDetails\");\r\n    this.handleCollapse();\r\n    return; //AVISO CON ESTO SE PODRIA PARAR EL MOVIMIENTO\r\n  }\r\n // console.log(`Updating capacities for ${vuelo.ciudadDestino} with ${cantidadPaquetes} packages`);\r\n\r\n  this.updateAirportCapacitiesColapse(vuelo.ciudadDestino, vuelo.cantidadPaquetes);\r\n  console.log(vuelo);\r\n  const sourceId = `vuelo-${vuelo.id}`;\r\n      if (!this.map.getSource(sourceId)) {\r\n        console.log(`Updating source ${sourceId}`);\r\n        this.map.addSource(sourceId, {\r\n          type: 'geojson',\r\n          data: {\r\n            type: 'Feature',\r\n            properties: {\r\n              id: vuelo.id,\r\n          'icon-image': this.calculateFlightIcon(vuelo.capacidadCargaUsado, vuelo.capacidadCargaMaxima)\r\n        },\r\n            geometry: {\r\n              type: 'Point',\r\n              coordinates: vuelo.origen\r\n            }\r\n          }\r\n        });\r\n        this.map.addLayer({\r\n          id: `avion-${vuelo.id}`,\r\n          type: 'symbol',\r\n          source: sourceId,\r\n          layout: {\r\n            'icon-image': ['get', 'icon-image'],\r\n            'icon-size': 0.5,\r\n            'icon-allow-overlap': true\r\n          }\r\n        });\r\n \r\n     /*   this.map.on('click', `avion-${envioId}`, (e) => {\r\n          console.log(\"LLega\");\r\n  const vueloId = e.features[0].properties.id; // Obtener el ID del vuelo del evento\r\n  const vuelo = this.envios.find(envio => envio.id === envioId).ruta.vuelos.find(v => v.id === vueloId);\r\n  this.onFlightClick(e, vuelo);\r\n});*/  this.map.on('click', `avion-${vuelo.id}`, (e) => {\r\n  const vueloId = e.features[0].properties.id;\r\n          const clickedVuelo = this.filteredVuelos.find(v => v.id === vueloId);\r\n          this.onFlightClick(e, clickedVuelo);\r\n        });\r\n\r\n      }\r\n      console.log(\"sadas\")\r\n      const flightDurationMinutes = this.parseDurationToMinutes(vuelo.tiempoEstimadoVuelo);\r\n      const flightDurationSimulationSeconds = flightDurationMinutes * 60;\r\n      const realTimeSeconds = flightDurationSimulationSeconds / 360;  // Convert to real time seconds based on 2160 simulated seconds = 1 real second\r\n\r\n // Number of animation steps\r\n\r\n      console.log(flightDurationMinutes)\r\n   //   console.log(realTimePerSimulatedSecond)\r\n   const steps = 100; // Define the total number of steps for smooth animation\r\n  const interval = (realTimeSeconds * 1000) / steps; \r\n      console.log(steps)\r\n   // let steps =336;\r\n    let currentStep = 0;\r\n    let currentPos = [...vuelo.origen];\r\n    const incrementLat = (vuelo.destino[1] - vuelo.origen[1]) / steps;\r\n    const incrementLng = (vuelo.destino[0] - vuelo.origen[0]) / steps;\r\n\r\n    const move = () => {\r\n      if (currentStep <= steps) {\r\n        currentPos[0] += incrementLng;\r\n        currentPos[1] += incrementLat;\r\n        if (this.map.getSource(sourceId)) {\r\n          this.map.getSource(sourceId).setData({\r\n            type: 'Feature',\r\n            geometry: {\r\n              type: 'Point',\r\n              coordinates: currentPos\r\n            },\r\n            properties: {\r\n              id: vuelo.id,\r\n              'icon-image': this.calculateFlightIcon(vuelo.capacidadCargaUsado, vuelo.capacidadCargaMaxima)\r\n            }\r\n          });\r\n        }\r\n        currentStep++;\r\n      //  requestAnimationFrame(move);\r\n      setTimeout(move, interval);\r\n      }\r\n    };\r\n    move();\r\n    },\r\n  \r\n    updateAirportCapacitiesColapse(codigoOACI, paquetes) {\r\n   //   console.log(`Updating capacities for ${codigoOACI} with ${paquetes} packages`);\r\n   this.collapseReason = 'EXCESO DE PAQUETES EN AEROPUERTOS';\r\n    const aeropuerto = aeropuertos.find(a => a.codigoOACI === codigoOACI);\r\n    if (aeropuerto) {\r\n        aeropuerto.capacidadDeAlmacenamientoUsado += paquetes;\r\n        console.log(`New storage used: ${aeropuerto.capacidadDeAlmacenamientoUsado}/${aeropuerto.capacidadAlmacenamientoMaximo}`);\r\n        if (aeropuerto.capacidadDeAlmacenamientoUsado > aeropuerto.capacidadAlmacenamientoMaximo) {\r\n            console.log(\"Airport collapse detected!\");\r\n            const collapseReason = 'Exceso de paquetes';\r\n        const collapseDetails = {\r\n      location: 'Lima, Perú - SMTP',\r\n      packagesInvolved: '956'\r\n    };\r\n    this.showModal();\r\n        }\r\n    }\r\n  },\r\n\r\n    checkForCollapse() {\r\n  console.log(\"Checking for collapse...\");\r\n  if ( aeropuertos.some(aero => aero.capacidadDeAlmacenamientoUsado > aero.capacidadAlmacenamientoMaximo) || \r\n   envios.some(envio => envio.ruta.vuelos.some(vuelo => vuelo.capacidadCargaUsado > vuelo.capacidadCargaMaxima))) {\r\n    console.log(\"Collapse detected!\");\r\n    this.showModal();\r\n  }\r\n},\r\n\r\n\r\n\r\nparseDurationToMinutes(duration) {\r\n    const regex = /PT(\\d+H)?(\\d+M)?/;\r\n    const matches = duration.match(regex);\r\n    const hours = parseInt(matches[1] || 0, 10);\r\n    const minutes = parseInt(matches[2] || 0, 10);\r\n    return (hours * 60) + minutes;\r\n  },\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  showModal() {\r\n      this.isModalVisible = true;\r\n      this.isVisible = true;\r\n      this.isVisibleResumen = true;\r\n    },\r\n\r\n    handleCollapse() {\r\n    console.log(\"Collapse detected!\");\r\n    this.isSimulating = false; // Detener la simulación\r\n    this.showModal();\r\n    \r\n  },\r\n  closeCollapseModal() {\r\n    this.isVisible = false;\r\n  },\r\n\r\n   detenerSimulacion(){\r\n     let vue = this;\r\n     vue.toggleIniciarDetener = false;\r\n     vue.toggleReanudar = true;\r\n     \r\n   },\r\n   reanudarSimulacion(){\r\n     let vue = this;\r\n     vue.toggleIniciarDetener = false;\r\n     vue.toggleReanudar = false;\r\n   },\r\n   cancelarSimulacion(){\r\n     let vue = this;\r\n     vue.toggleIniciarDetener = true;\r\n     console.log(\"SE DETIENE LA SIMULACION\");\r\n     clearInterval(vue.myInterval);\r\n     Simulation.stopSimulation();\r\n     console.log(vue.fecha_fin_simulacion);\r\n   },\r\n \r\n   onAirportClick(event) {\r\n      const feature = event.features[0];\r\n      \r\n      const aeropuerto = this.aeropuertos.find(a => a.codigoOACI === feature.properties.codigoOACI);\r\n      console.log(aeropuerto)\r\n      if (aeropuerto) {\r\n        this.openModals.push({\r\n          id: aeropuerto.id,\r\n          data: aeropuerto\r\n        });\r\n      }\r\n    },\r\n    closeAirportModal(id) {\r\n      this.openModals = this.openModals.filter(modal => modal.id !== id);\r\n    },\r\n\r\n    onFlightClick(event, vuelo) {\r\n    console.log(\"Información del vuelo clickeado:\", vuelo);\r\n    if (vuelo) {\r\n      this.openFlightModals.push({\r\n        id: `${vuelo.id}-${new Date().getTime()}`,\r\n        data: vuelo\r\n      });\r\n    }\r\n  },\r\n    closeFlightModal(id) {\r\n      this.openFlightModals = this.openFlightModals.filter(modal => modal.id !== id);\r\n    },\r\n\r\n\r\n\r\n },\r\n computed: {\r\n  /*\r\n  filteredEnvios() {\r\n    const fechaInicio = new Date(this.fecha_inicio_simulacion);\r\n    const fechaFin = new Date(fechaInicio);\r\n    fechaFin.setDate(fechaFin.getDate() + 7);\r\n\r\n    const filtered = this.envios.filter(envio => {\r\n      return envio.ruta.vuelos.some(vuelo => {\r\n        const fechaSalida = new Date(`${vuelo.fechaSalida}T${vuelo.horaSalida}`);\r\n        const fechaLlegada = new Date(`${vuelo.fechaLlegada}T${vuelo.horaLlegada}`);\r\n\r\n        return fechaSalida >= fechaInicio && fechaLlegada <= fechaFin;\r\n      });\r\n    });\r\n\r\n  \r\n    return filtered;\r\n  },*/\r\n  filteredVuelos() {\r\n    const filtered = [];\r\n    \r\n    Object.keys(this.calendarioVuelos).forEach(fecha => {\r\n      const vuelosDelDia = this.calendarioVuelos[fecha];\r\n      vuelosDelDia.forEach(vuelo => {\r\n        filtered.push(vuelo);\r\n      });\r\n    });\r\n\r\n    return filtered;\r\n  }\r\n}\r\n\r\n}\r\n</script>\r\n<style scoped>\r\n.datetime-display {\r\n position: absolute;\r\n top: 10px;\r\n right: 10px;\r\n color: white;\r\n background-color: rgba(0, 0, 0, 0.7);\r\n padding: 5px 10px;\r\n border-radius: 5px;\r\n z-index: 1001; /* Asegúrate de que esté visible sobre el mapa */\r\n}\r\n\r\n.map-container {\r\n position: relative;\r\n height: 100vh;\r\n width: 100%;\r\n \r\n}\r\n\r\n.map-header {\r\n position: absolute;\r\n top: 0;\r\n left: 0;\r\n z-index: 1000;\r\n width: 100%;\r\n background-color: rgba(0, 0, 0, 0.5);\r\n padding: 10px;\r\n color: #fff;\r\n text-align: center;\r\n}\r\n\r\n.map-title {\r\n font-size: 1.5em;\r\n}\r\n\r\n.map-tagline {\r\n font-size: 1em;\r\n}\r\n\r\n.map-search-container {\r\n .map-search-container {\r\n position: absolute;\r\n top: 60px;\r\n left: 10px; /* Ajusta según necesidad */\r\n z-index: 1000;\r\n width: 200px; /* Ancho fijo para todos los inputs */\r\n padding: 10px;\r\n background-color: rgba(0, 0, 0, 0.5);\r\n display: flex;\r\n flex-direction: column; /* Cambio aquí */\r\n align-items: flex-start; /* Alinear al inicio (izquierda) */\r\n}\r\n}\r\n\r\n.search-input {\r\n flex: 1;\r\n margin: 0 5px;\r\n padding: 10px;\r\n border: none;\r\n border-radius: 5px;\r\n}\r\n\r\n.main-map {\r\n height: 100%;\r\n width: 100%;\r\n}\r\n\r\n.map-sidebar {\r\n position: absolute;\r\n top: 0;\r\n right: 0;\r\n z-index: 1000;\r\n height: 100%;\r\n width: 300px;\r\n background-color: rgba(0, 0, 0, 0.5);\r\n color: #fff;\r\n padding: 10px;\r\n display: flex;\r\n flex-direction: column;\r\n}\r\n\r\n\r\n.brand-title {\r\n font-size: 1em; /* Ajusta el tamaño como desees */\r\n color: #fff; /* Color para 'Redex' */\r\n font-weight: bold;\r\n}\r\n\r\n.brand-title-point {\r\n font-size: 1em; /* Asegúrate de que sea del mismo tamaño que .brand-title para alineación adecuada */\r\n color: #00B074; /* Color para el punto */\r\n font-weight: bold;\r\n}\r\n\r\n.brand-tagline {\r\n font-size: 1em; /* Ajusta el tamaño del tagline */\r\n color: #B9BBBD; /* Color para 'Always on Time' */\r\n font-weight: bold;\r\n margin-bottom: 199px;\r\n display: flex;\r\n align-items: baseline; /* Alinea correctamente el texto y el punto */\r\n gap: 0.2em; /* Ajusta el espacio entre 'Redex' y el punto */\r\n}\r\n\r\n/* Si deseas que 'Redex.' esté en una sola línea, puedes usar display: flex en el contenedor */\r\n.brand {\r\n display: flex;\r\n align-items: baseline; /* Alinea correctamente el texto y el punto */\r\n gap: 0.2em; /* Ajusta el espacio entre 'Redex' y el punto */\r\n \r\n margin-bottom: -5px; /* Ajusta esto para aumentar el espacio entre el título y el subtítulo */\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n.map-legend {\r\n color: black; /* Cambia el color de texto a negro */\r\n position: absolute;\r\n bottom: 120px;\r\n right: 20px;\r\n z-index: 1000;\r\n background: #fff;\r\n padding: 10px;\r\n border-radius: 5px;\r\n box-shadow: 0 2px 4px rgba(0,0,0,0.3);\r\n cursor: pointer;\r\n}\r\n\r\n.legend-toggle {\r\n background: #333;\r\n color: #fff;\r\n padding: 5px 10px;\r\n border: none;\r\n border-radius: 3px;\r\n cursor: pointer;\r\n display: block;\r\n width: 100%;\r\n text-align: center;\r\n}\r\n\r\n.legend-content {\r\n color: black;\r\n list-style: none;\r\n padding: 0;\r\n margin: 0; /* Remove margin-top when visible */\r\n display: none; /* Hidden by default */\r\n}\r\n\r\n.legend-content li {\r\n color: black; \r\n margin-bottom: 5px;\r\n display: flex;\r\n align-items: center;\r\n}\r\n\r\n.dot {\r\n\r\n height: 10px;\r\n width: 10px;\r\n border-radius: 50%;\r\n display: inline-block;\r\n margin-right: 10px;\r\n}\r\n\r\n.less-50 { background: red; }\r\n.between-50-80 { background: orange; }\r\n.greater-80 { background: green; }\r\n\r\n.icon {\r\n width: 16px;\r\n height: 16px;\r\n display: inline-block;\r\n background-size: contain;\r\n background-repeat: no-repeat;\r\n margin-right: 10px;\r\n}\r\n\r\n.modal-content {\r\n  background: white; /* Fondo blanco para alto contraste */\r\n  padding: 20px;\r\n  border-radius: 5px;\r\n  box-shadow: 0 4px 6px rgba(0,0,0,0.1);\r\n  color: black; /* Color de texto general a negro */\r\n  width: auto;\r\n  max-width: 500px; /* Ajusta el ancho máximo según necesites */\r\n  text-align: left; /* Asegura que el texto esté alineado a la izquierda */\r\n}\r\n\r\n.modal-content h2 {\r\n  color: red; /* Color rojo para el título del colapso */\r\n  font-weight: bold;\r\n  margin: 0 auto; /* Centra la imagen */\r\n}\r\n\r\n.modal-content strong {\r\n  color: red; /* Color rojo para las palabras clave */\r\n  font-weight: bold;\r\n}\r\n\r\n.modal-content p, .modal-content ul {\r\n  color: black; /* Resto del texto en negro */\r\n}\r\n\r\n.modal-button {\r\n  background-color: red; /* Fondo rojo para el botón */\r\n  color: white; /* Texto blanco para el botón */\r\n  padding: 10px 20px;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  margin-top: 10px; /* Espaciado superior para separarlo del contenido */\r\n  font-weight: bold;\r\n}\r\n\r\n.modal-button:hover {\r\n  background-color: darkred; /* Un rojo más oscuro al pasar el mouse */\r\n}\r\n.modal-content li strong {\r\n  color: black; /* Cambia el color de los términos clave a negro */\r\n  font-weight: normal; /* Si deseas que no sean bold */\r\n}\r\n\r\n.modal-content li {\r\n  color: black; /* Todos los textos de los items en negro */\r\n}\r\n.modal-overlay {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.7);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: 10000; /* Alto z-index para asegurar que está sobre otros elementos */\r\n}\r\n\r\n.collapse-icon {\r\n  background-image: url('/img/carita.png');\r\n  background-size: contain;\r\n  background-repeat: no-repeat;\r\n  width: 50px; /* Ajusta el tamaño según tus necesidades */\r\n  height: 50px; /* Ajusta el tamaño según tus necesidades */\r\n  display: block;\r\n  margin: 0 auto; /* Centra la imagen */\r\n}\r\n\r\n\r\n\r\n\r\n\r\n.modal-content-airport {\r\n  background: white; /* Fondo blanco para alto contraste */\r\n  padding: 20px;\r\n  border-radius: 5px;\r\n  box-shadow: 0 4px 6px rgba(0,0,0,0.1);\r\n  color: black; /* Color de texto general a negro */\r\n  width: auto;\r\n  max-width: 500px; /* Ajusta el ancho máximo según necesites */\r\n  text-align: left; /* Asegura que el texto esté alineado a la izquierda */\r\n  display: flex;\r\n  flex-direction: column; /* Alinea el contenido verticalmente */\r\n  align-items: left; /* Centra horizontalmente el contenido */\r\n}\r\n\r\n.modal-content-airport h2 {\r\n  color: #00B074; /* Color verde para el título del colapso */\r\n  font-weight: bold;\r\n  margin: 0 auto; /* Centra la imagen */\r\n}\r\n\r\n.modal-content-airport strong {\r\n  color: #00B074; /* Color verde para las palabras clave */\r\n  font-weight: bold;\r\n}\r\n\r\n.modal-content-airport p, .modal-content-airport ul {\r\n  color: black; /* Resto del texto en negro */\r\n}\r\n\r\n.modal-button-airport {\r\n  background-color: #00B074; /* Fondo verde para el botón */\r\n  color: white; /* Texto blanco para el botón */\r\n  padding: 10px 20px;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  margin-top: 10px; /* Espaciado superior para separarlo del contenido */\r\n  font-weight: bold;\r\n  align-self: center; /* Centra el botón horizontalmente */\r\n}\r\n\r\n.modal-button-airport:hover {\r\n  background-color: darkgreen; /* Un verde más oscuro al pasar el mouse */\r\n}\r\n\r\n.modal-content-airport li strong {\r\n  color: black; /* Cambia el color de los términos clave a negro */\r\n  font-weight: normal; /* Si deseas que no sean bold */\r\n}\r\n\r\n.modal-content-airport li {\r\n  color: black; /* Todos los textos de los items en negro */\r\n}\r\n\r\n.modal-overlay-airport {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.7);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: 10000; /* Alto z-index para asegurar que está sobre otros elementos */\r\n}\r\n\r\n\r\n\r\n.modal-content-flight {\r\n  background: white;\r\n  padding: 20px;\r\n  border-radius: 5px;\r\n  box-shadow: 0 4px 6px rgba(0,0,0,0.1);\r\n  color: black;\r\n  width: auto;\r\n  max-width: 500px;\r\n  text-align: left;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: left;\r\n}\r\n\r\n.modal-content-flight h2 {\r\n  color: #00B074;\r\n  font-weight: bold;\r\n  margin: 0 auto;\r\n}\r\n\r\n.modal-content-flight strong {\r\n  color: #00B074;\r\n  font-weight: bold;\r\n}\r\n\r\n.modal-content-flight p, .modal-content-flight ul {\r\n  color: black;\r\n}\r\n\r\n.modal-button-flight {\r\n  background-color: #00B074;\r\n  color: white;\r\n  padding: 10px 20px;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  margin-top: 10px;\r\n  font-weight: bold;\r\n  align-self: center;\r\n}\r\n\r\n.modal-button-flight:hover {\r\n  background-color: darkgreen;\r\n}\r\n\r\n.modal-overlay-flight {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.7);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: 10000;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n.airplane-icon { background-image: url('/img/avion.png'); }\r\n.airport-icon { background-image: url('/img/ubi.png'); }\r\n.airport-green { background-image: url('/img/airport-green.png'); }\r\n.airport-orange { background-image: url('/img/airport-orange.png'); }\r\n.airport-red { background-image: url('/img/airport-red.png'); }\r\n.flight-green { background-image: url('/img/flight-green.png'); }\r\n.flight-orange { background-image: url('/img/flight-orange.png'); }\r\n.flight-red { background-image: url('/img/flight-red.png'); }\r\n\r\n</style>"]}]}