{"remainingRequest":"C:\\Users\\PC\\Desktop\\Otros\\DP1\\Front\\dp1_front-Redex\\Redex\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\PC\\Desktop\\Otros\\DP1\\Front\\dp1_front-Redex\\Redex\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\PC\\Desktop\\Otros\\DP1\\Front\\dp1_front-Redex\\Redex\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\PC\\Desktop\\Otros\\DP1\\Front\\dp1_front-Redex\\Redex\\node_modules\\vue-mapbox\\src\\components\\map\\GlMap.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\PC\\Desktop\\Otros\\DP1\\Front\\dp1_front-Redex\\Redex\\node_modules\\vue-mapbox\\src\\components\\map\\GlMap.vue","mtime":1715192477969},{"path":"C:\\Users\\PC\\Desktop\\Otros\\DP1\\Front\\dp1_front-Redex\\Redex\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1715192468895},{"path":"C:\\Users\\PC\\Desktop\\Otros\\DP1\\Front\\dp1_front-Redex\\Redex\\node_modules\\babel-loader\\lib\\index.js","mtime":1715192467870},{"path":"C:\\Users\\PC\\Desktop\\Otros\\DP1\\Front\\dp1_front-Redex\\Redex\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1715192468895},{"path":"C:\\Users\\PC\\Desktop\\Otros\\DP1\\Front\\dp1_front-Redex\\Redex\\node_modules\\vue-loader\\lib\\index.js","mtime":1715192477908}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\nimport withEvents from \"../../lib/withEvents\";\nimport mapEvents from \"./events\";\nimport options from \"./options\";\nimport withWatchers from \"./mixins/withWatchers\";\nimport withPrivateMethods from \"./mixins/withPrivateMethods\";\nimport withAsyncActions from \"./mixins/withAsyncActions\";\nexport default {\n  name: \"GlMap\",\n  mixins: [withWatchers, withAsyncActions, withPrivateMethods, withEvents],\n  props: {\n    mapboxGl: {\n      type: Object,\n      default: null\n    },\n    ...options\n  },\n\n  provide() {\n    const self = this;\n    return {\n      get mapbox() {\n        return self.mapbox;\n      },\n\n      get map() {\n        return self.map;\n      },\n\n      get actions() {\n        return self.actions;\n      }\n\n    };\n  },\n\n  data() {\n    return {\n      initial: true,\n      initialized: false\n    };\n  },\n\n  computed: {\n    loaded() {\n      return this.map ? this.map.loaded() : false;\n    },\n\n    version() {\n      return this.map ? this.map.version : null;\n    },\n\n    // TODO: make 'bounds' synced prop\n    bounds() {\n      return this.map ? this.map.getBounds() : null;\n    },\n\n    isStyleLoaded() {\n      return this.map ? this.map.isStyleLoaded() : false;\n    },\n\n    areTilesLoaded() {\n      return this.map ? this.map.areTilesLoaded() : false;\n    },\n\n    isMoving() {\n      return this.map ? this.map.isMoving() : false;\n    },\n\n    canvas() {\n      return this.map ? this.map.getCanvas() : null;\n    },\n\n    canvasContainer() {\n      return this.map ? this.map.getCanvasContainer() : null;\n    },\n\n    images() {\n      return this.map ? this.map.listImages() : null;\n    }\n\n  },\n\n  created() {\n    this.map = null;\n    this.propsIsUpdating = {};\n    this.mapboxPromise = this.mapboxGl ? Promise.resolve(this.mapboxGl) : import(\"mapbox-gl\");\n  },\n\n  mounted() {\n    this.$_loadMap().then(map => {\n      this.map = map;\n\n      if (this.RTLTextPluginUrl !== undefined) {\n        this.mapbox.setRTLTextPlugin(this.RTLTextPluginUrl, this.$_RTLTextPluginError);\n      }\n\n      const eventNames = Object.keys(mapEvents);\n      this.$_bindMapEvents(eventNames);\n      this.$_registerAsyncActions(map);\n      this.$_bindPropsUpdateEvents();\n      this.initial = false;\n      this.initialized = true;\n      this.$emit(\"load\", {\n        map,\n        component: this\n      });\n    });\n  },\n\n  beforeDestroy() {\n    this.$nextTick(() => {\n      if (this.map) this.map.remove();\n    });\n  }\n\n};",{"version":3,"sources":["GlMap.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div class=\"mgl-map-wrapper\">\r\n    <div v-once :id=\"container\" ref=\"container\" />\r\n    <slot v-if=\"initialized\" />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport withEvents from \"../../lib/withEvents\";\r\nimport mapEvents from \"./events\";\r\nimport options from \"./options\";\r\nimport withWatchers from \"./mixins/withWatchers\";\r\nimport withPrivateMethods from \"./mixins/withPrivateMethods\";\r\nimport withAsyncActions from \"./mixins/withAsyncActions\";\r\n\r\nexport default {\r\n  name: \"GlMap\",\r\n\r\n  mixins: [withWatchers, withAsyncActions, withPrivateMethods, withEvents],\r\n\r\n  props: {\r\n    mapboxGl: {\r\n      type: Object,\r\n      default: null\r\n    },\r\n    ...options\r\n  },\r\n\r\n  provide() {\r\n    const self = this;\r\n    return {\r\n      get mapbox() {\r\n        return self.mapbox;\r\n      },\r\n      get map() {\r\n        return self.map;\r\n      },\r\n      get actions() {\r\n        return self.actions;\r\n      }\r\n    };\r\n  },\r\n\r\n  data() {\r\n    return {\r\n      initial: true,\r\n      initialized: false\r\n    };\r\n  },\r\n\r\n  computed: {\r\n    loaded() {\r\n      return this.map ? this.map.loaded() : false;\r\n    },\r\n    version() {\r\n      return this.map ? this.map.version : null;\r\n    },\r\n    // TODO: make 'bounds' synced prop\r\n    bounds() {\r\n      return this.map ? this.map.getBounds() : null;\r\n    },\r\n    isStyleLoaded() {\r\n      return this.map ? this.map.isStyleLoaded() : false;\r\n    },\r\n    areTilesLoaded() {\r\n      return this.map ? this.map.areTilesLoaded() : false;\r\n    },\r\n    isMoving() {\r\n      return this.map ? this.map.isMoving() : false;\r\n    },\r\n    canvas() {\r\n      return this.map ? this.map.getCanvas() : null;\r\n    },\r\n    canvasContainer() {\r\n      return this.map ? this.map.getCanvasContainer() : null;\r\n    },\r\n    images() {\r\n      return this.map ? this.map.listImages() : null;\r\n    }\r\n  },\r\n\r\n  created() {\r\n    this.map = null;\r\n    this.propsIsUpdating = {};\r\n    this.mapboxPromise = this.mapboxGl\r\n      ? Promise.resolve(this.mapboxGl)\r\n      : import(\"mapbox-gl\");\r\n  },\r\n\r\n  mounted() {\r\n    this.$_loadMap().then(map => {\r\n      this.map = map;\r\n      if (this.RTLTextPluginUrl !== undefined) {\r\n        this.mapbox.setRTLTextPlugin(\r\n          this.RTLTextPluginUrl,\r\n          this.$_RTLTextPluginError\r\n        );\r\n      }\r\n      const eventNames = Object.keys(mapEvents);\r\n      this.$_bindMapEvents(eventNames);\r\n      this.$_registerAsyncActions(map);\r\n      this.$_bindPropsUpdateEvents();\r\n      this.initial = false;\r\n      this.initialized = true;\r\n      this.$emit(\"load\", { map, component: this });\r\n    });\r\n  },\r\n\r\n  beforeDestroy() {\r\n    this.$nextTick(() => {\r\n      if (this.map) this.map.remove();\r\n    });\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n.mgl-map-wrapper {\r\n  height: 100%;\r\n  position: relative;\r\n  width: 100%;\r\n}\r\n\r\n.mgl-map-wrapper .mapboxgl-map {\r\n  height: 100%;\r\n  left: 0;\r\n  position: absolute;\r\n  top: 0;\r\n  width: 100%;\r\n}\r\n</style>\r\n"],"sourceRoot":"node_modules/vue-mapbox/src/components/map"}]}